{"version":3,"sources":["D:/Projects/Liferay/portal/modules/frontend/frontend-js-metal-web/bower_components/metal/src/soy/SoyComponentAop.js"],"names":[],"mappings":";AAAA,aAAY,CAAC;;;;;;AAIb,KAAI,eAAe,GAAG;;;;;;;AAOrB,cAAY,EAAE,IAAI;;;;;;;AAOlB,sBAAoB,EAAE,KAAK;;;;;;;;AAQ3B,eAAa,EAAE,uBAAS,EAAE,EAAE;AAC3B,UAAO,EAAE,CAAC,UAAU,GAAG,EAAE,CAAC,UAAU,GAAG,EAAE,CAAC;GAC1C;;;;;;;;;;;;;AAaD,qBAAmB,EAAE,6BAAS,QAAQ,EAAE,YAAY,EAAE,UAAU,EAAE,QAAQ,EAAE,WAAW,EAAE,UAAU,EAAE;AACpG,OAAI,eAAe,CAAC,YAAY,EAAE;AACjC,WAAO,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,EAAE,YAAY,EAAE,UAAU,EAAE,QAAQ,EAAE,WAAW,EAAE,UAAU,CAAC,CAAC;IACtH,MAAM;AACN,WAAO,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,EAAE,WAAW,EAAE,UAAU,CAAC,CAAC;IAChE;GACD;;;;;;AAMD,aAAW,EAAE,uBAAW;AACvB,OAAI,CAAC,eAAe,CAAC,oBAAoB,EAAE;AAC1C,UAAM,CAAC,IAAI,CAAC,8BAAkB,SAAS,CAAC,CAAC,OAAO,CAAC,UAAS,QAAQ,EAAE;AACnE,oBAAe,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;KAC5C,CAAC,CAAC;AACH,mBAAe,CAAC,oBAAoB,GAAG,IAAI,CAAC;IAC5C;GACD;;;;;;AAMD,mBAAiB,EAAE,2BAAS,QAAQ,EAAE;AACrC,OAAI,aAAa,GAAG,8BAAkB,SAAS,CAAC,QAAQ,CAAC,CAAC;AAC1D,SAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,UAAS,YAAY,EAAE;AACzD,QAAI,UAAU,GAAG,aAAa,CAAC,YAAY,CAAC,CAAC;AAC7C,QAAI,CAAC,UAAU,CAAC,UAAU,EAAE;AAC3B,kBAAa,CAAC,YAAY,CAAC,GAAG,eAAe,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,EAAE,YAAY,EAAE,UAAU,CAAC,CAAC;AACjH,kBAAa,CAAC,YAAY,CAAC,CAAC,UAAU,GAAG,UAAU,CAAC;KACpD;IACD,CAAC,CAAC;GACH;;;;;;;AAOD,mBAAiB,EAAE,2BAAS,EAAE,EAAE;AAC/B,OAAI,CAAC,WAAW,EAAE,CAAC;AACnB,kBAAe,CAAC,YAAY,GAAG,EAAE,CAAC;GAClC;;;;;AAKD,kBAAgB,EAAE,4BAAW;AAC5B,kBAAe,CAAC,YAAY,GAAG,IAAI,CAAC;GACpC;EACD,CAAC;;kBAEa,eAAe","file":"bower_components/metal/src/soy/SoyComponentAop.js","sourcesContent":["'use strict';\n\nimport ComponentRegistry from '../component/ComponentRegistry';\n\nvar SoyComponentAop = {\n\t/**\n\t * The function that should be called instead of a template call. If null, the original function\n\t * will be called instead.\n\t * @type {function()}\n\t * @protected\n\t */\n\tinterceptFn_: null,\n\n\t/**\n\t * Flag indicating if soy templates have already been registered for interception or not.\n\t * @type {boolean}\n\t * @protected\n\t */\n\tregisteredTemplates_: false,\n\n\t/**\n\t * Gets the original function of the given template function. If no original exists,\n\t * returns the given function itself.\n\t * @param {!function()} fn\n\t * @return {!function()}\n\t */\n\tgetOriginalFn: function(fn) {\n\t\treturn fn.originalFn ? fn.originalFn : fn;\n\t},\n\n\t/**\n\t * Handles a template call, calling the current interception function if one is set, or otherwise\n\t * just calling the original function instead.\n\t * @param {string} compName The name of the component this template function belongs to.\n\t * @param {string} templateName The name of the template this call was made for.\n\t * @param {!function()} originalFn The original template function that was intercepted.\n\t * @param {Object} opt_data Template data object.\n\t * @param {*} opt_ignored\n\t * @param {Object} opt_ijData Template injected data object.\n\t * @return {*} The return value of the function that is called to handle this interception.\n\t */\n\thandleTemplateCall_: function(compName, templateName, originalFn, opt_data, opt_ignored, opt_ijData) {\n\t\tif (SoyComponentAop.interceptFn_) {\n\t\t\treturn SoyComponentAop.interceptFn_.call(null, compName, templateName, originalFn, opt_data, opt_ignored, opt_ijData);\n\t\t} else {\n\t\t\treturn originalFn.call(null, opt_data, opt_ignored, opt_ijData);\n\t\t}\n\t},\n\n\t/**\n\t * Registers all templates so they can be intercepted, unless they've already\n\t * been registered before.\n\t */\n\tregisterAll: function() {\n\t\tif (!SoyComponentAop.registeredTemplates_) {\n\t\t\tObject.keys(ComponentRegistry.Templates).forEach(function(compName) {\n\t\t\t\tSoyComponentAop.registerTemplates(compName);\n\t\t\t});\n\t\t\tSoyComponentAop.registeredTemplates_ = true;\n\t\t}\n\t},\n\n\t/**\n\t * Registers the templates for the requested component so they can be intercepted.\n\t * @param {string} compName\n\t */\n\tregisterTemplates: function(compName) {\n\t\tvar compTemplates = ComponentRegistry.Templates[compName];\n\t\tObject.keys(compTemplates).forEach(function(templateName) {\n\t\t\tvar originalFn = compTemplates[templateName];\n\t\t\tif (!originalFn.originalFn) {\n\t\t\t\tcompTemplates[templateName] = SoyComponentAop.handleTemplateCall_.bind(null, compName, templateName, originalFn);\n\t\t\t\tcompTemplates[templateName].originalFn = originalFn;\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n\t * Starts intercepting all template calls, replacing them with a call\n\t * to the given function instead.\n\t * @param {!function()} fn\n\t */\n\tstartInterception: function(fn) {\n\t\tthis.registerAll();\n\t\tSoyComponentAop.interceptFn_ = fn;\n\t},\n\n\t/**\n\t * Stops intercepting template calls.\n\t */\n\tstopInterception: function() {\n\t\tSoyComponentAop.interceptFn_ = null;\n\t}\n};\n\nexport default SoyComponentAop;\n"],"sourceRoot":"/source/"}