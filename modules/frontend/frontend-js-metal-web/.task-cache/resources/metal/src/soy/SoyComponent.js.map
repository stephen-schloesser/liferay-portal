{"version":3,"sources":["D:/Projects/Liferay/portal/modules/frontend/frontend-js-metal-web/bower_components/metal/src/soy/SoyComponent.js"],"names":[],"mappings":"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","file":"bower_components/metal/src/soy/SoyComponent.js","sourcesContent":["'use strict';\n\nimport soyutils from 'module:soyutils';\n\nimport core from '../core';\nimport dom from '../dom/dom';\nimport object from '../object/object';\nimport Component from '../component/Component';\nimport ComponentRegistry from '../component/ComponentRegistry';\nimport SoyComponentAop from '../soy/SoyComponentAop';\n\n// The injected data that will be passed to soy templates.\nvar ijData = {};\n\n/**\n * Special Component class that handles a better integration between soy templates\n * and the components. It allows for automatic rendering of surfaces that have soy\n * templates defined with their names, skipping the call to `getSurfaceContent`.\n * @param {Object} opt_config An object with the initial values for this component's\n *   attributes.\n * @constructor\n * @extends {Component}\n */\nclass SoyComponent extends Component {\n\tconstructor(opt_config) {\n\t\tsuper(opt_config);\n\n\t\t/**\n\t\t * Flags indicating which surface names have already been found on this component's content.\n\t\t * @type {!Object<string, boolean>}\n\t\t * @protected\n\t\t */\n\t\tthis.firstSurfaceFound_ = {};\n\n\t\t/**\n\t\t * Indicates which surface is currently being rendered, or null if none is.\n\t\t * @type {boolean}\n\t\t * @protected\n\t\t */\n\t\tthis.surfaceBeingRendered_ = null;\n\n\t\t/**\n\t\t * Flag indicating if inner calls to templates should be skipped.\n\t\t * @type {boolean}\n\t\t * @protected\n\t\t */\n\t\tthis.skipInnerCalls_ = false;\n\t}\n\n\t/**\n\t * Adds surfaces for each registered template that is not named `element`.\n\t * @protected\n\t */\n\taddSurfacesFromTemplates_() {\n\t\tvar templates = ComponentRegistry.Templates[this.constructor.NAME] || {};\n\t\tvar templateNames = Object.keys(templates);\n\t\tfor (var i = 0; i < templateNames.length; i++) {\n\t\t\tvar templateName = templateNames[i];\n\t\t\tvar templateFn = SoyComponentAop.getOriginalFn(templates[templateName]);\n\t\t\tif (this.isSurfaceTemplate_(templateName, templateFn)) {\n\t\t\t\tvar surface = this.getSurface(templateName);\n\t\t\t\tif (!surface) {\n\t\t\t\t\tthis.addSurface(templateName, {\n\t\t\t\t\t\trenderAttrs: templateFn.params,\n\t\t\t\t\t\ttemplateComponentName: this.constructor.NAME,\n\t\t\t\t\t\ttemplateName: templateName\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Builds the config data for a component from the data that was passed to its\n\t * soy template function.\n\t * @param {string} id The id of the component.\n\t * @param {!Object} templateData\n\t * @return {!Object} The component's config data.\n\t * @protected\n\t */\n\tbuildComponentConfigData_(id, templateData) {\n\t\tvar config = {\n\t\t\tid: id\n\t\t};\n\t\tfor (var key in templateData) {\n\t\t\tconfig[key] = templateData[key];\n\t\t}\n\t\treturn config;\n\t}\n\n\t/**\n\t * Overrides the original method from `Component` to include renderAttrs extracted\n\t * from the sou template.\n\t * @return {!Object}\n\t */\n\tbuildElementSurfaceData_() {\n\t\tvar data = super.buildElementSurfaceData_();\n\t\tvar templates = ComponentRegistry.Templates[this.constructor.NAME] || {};\n\t\tif (templates.content) {\n\t\t\tdata.renderAttrs = SoyComponentAop.getOriginalFn(templates.content).params;\n\t\t}\n\t\treturn data;\n\t}\n\n\t/**\n\t * Builds the data object that should be passed to a template from this component.\n\t * @return {!Object}\n\t * @protected\n\t */\n\tbuildTemplateData_() {\n\t\tvar names = this.getAttrNames().filter(function(name) {\n\t\t\t// Get all attribute values except for \"element\", since it helps performance and this\n\t\t\t// attribute shouldn't be referenced inside a soy template anyway.\n\t\t\treturn name !== 'element';\n\t\t});\n\t\tvar surface = this.getSurface(this.id);\n\t\tvar data = (surface && surface.componentData) ? surface.componentData : {};\n\t\treturn object.mixin(data, this.getAttrs(names));\n\t}\n\n\t/**\n\t * Creates and instantiates a component that has the given soy template function as its\n\t * main content template. All keys present in the config object, if one is given, will be\n\t * attributes of this component, and the object itself will be passed to the constructor.\n\t * @param {!function()} templateFn\n\t * @param {(Element|string)=} opt_element The element that should be decorated. If none is given,\n\t *   one will be created and appended to the document body.\n\t * @param {Object=} opt_data Data to be passed to the soy template when it's called.\n\t * @return {!SoyComponent}\n\t * @static\n\t */\n\tstatic createComponentFromTemplate(templateFn, opt_element, opt_data) {\n\t\tvar element = opt_element ? dom.toElement(opt_element) : null;\n\t\tvar data = object.mixin(\n\t\t\t{\n\t\t\t\tid: element ? element.id : null\n\t\t\t},\n\t\t\topt_data,\n\t\t\t{\n\t\t\t\telement: element\n\t\t\t}\n\t\t);\n\n\t\tvar name = 'TemplateComponent' + core.getUid();\n\t\tclass TemplateComponent extends SoyComponent {\n\t\t}\n\t\tComponentRegistry.register(name, TemplateComponent);\n\t\tComponentRegistry.Templates[name] = {\n\t\t\tcontent: function(opt_attrs, opt_ignored, opt_ijData) {\n\t\t\t\treturn SoyComponentAop.getOriginalFn(templateFn)(data, opt_ignored, opt_ijData);\n\t\t\t}\n\t\t};\n\t\tSoyComponentAop.registerTemplates(name);\n\t\treturn new TemplateComponent(data);\n\t}\n\n\t/**\n\t * Overrides the original method from `Component` to add more behavior that should\n\t * happen before the creation lifecycle of the component.\n\t * @protected\n\t * @override\n\t */\n\tcreated_() {\n\t\tthis.addSurfacesFromTemplates_();\n\t\tsuper.created_();\n\t}\n\n\t/**\n\t * Decorates html rendered by the given soy template function, instantiating any referenced\n\t * components in it.\n\t * @param {!function()} templateFn\n\t * @param {(Element|string)=} opt_element The element that should be decorated. If none is given,\n\t *   one will be created and appended to the document body.\n\t * @param {Object=} opt_data Data to be passed to the soy template when it's called.\n\t * @return {!SoyComponent} The component that was created for this action. Contains\n\t *   references to components that were rendered by the given template function.\n\t * @static\n\t */\n\tstatic decorateFromTemplate(templateFn, opt_element, opt_data) {\n\t\treturn SoyComponent.createComponentFromTemplate(templateFn, opt_element, opt_data).decorate();\n\t}\n\n\t/**\n\t * Generates the id for a surface that was found by a soy template call.\n\t * @param {string?} parentSurfaceId The id of the parent surface, or undefined\n\t *   if there is none.\n\t * @param {!Object} data The placeholder data registered for this surface.\n\t * @return {string} The generated id.\n\t * @override\n\t */\n\tgenerateSurfaceElementId_(parentSurfaceId, data) {\n\t\tif (data.templateName &&\n\t\t\t!parentSurfaceId &&\n\t\t\t!this.firstSurfaceFound_[data.templateName]) {\n\t\t\tthis.firstSurfaceFound_[data.templateName] = true;\n\t\t\treturn this.prefixSurfaceId_(data.templateName);\n\t\t} else {\n\t\t\treturn super.generateSurfaceElementId_(parentSurfaceId);\n\t\t}\n\t}\n\n\t/**\n\t * Gets the content that should be rendered in the component's main element by\n\t * rendering the `content` soy template.\n\t * @return {?string} The template's result content, or undefined if the\n\t *   template doesn't exist.\n\t */\n\tgetElementContent() {\n\t\tthis.firstSurfaceFound_ = {};\n\t\tthis.surfaceBeingRendered_ = null;\n\t\treturn this.renderTemplateByName_(this.constructor.NAME, 'content');\n\t}\n\n\t/**\n\t * Makes the default behavior of rendering surfaces automatically render the\n\t * appropriate soy template when one exists.\n\t * @param {string} surfaceId The surface id.\n\t * @param {string} surfaceElementId The surface element id.\n\t * @return {Object|string} The content to be rendered.\n\t * @override\n\t */\n\tgetSurfaceContent(surfaceId, surfaceElementId) {\n\t\tvar surface = this.getSurface(surfaceId);\n\t\tvar data = surface.templateData;\n\t\tsurface.templateData = null;\n\t\tthis.surfaceBeingRendered_ = surfaceElementId;\n\t\treturn this.renderTemplateByName_(surface.templateComponentName, surface.templateName, data);\n\t}\n\n\t/**\n\t * Handles a call to the SoyComponent component template.\n\t * @param {string} componentName The component's name.\n\t * @param {Object} data The data the template was called with.\n\t * @return {string} A placeholder to be rendered instead of the content the template\n\t *   function would have returned.\n\t * @protected\n\t */\n\thandleComponentCall_(componentName, data) {\n\t\tvar surfaceData = {\n\t\t\tcomponentName: componentName\n\t\t};\n\t\tvar id = (data || {}).id || this.generateSurfaceElementId_(this.surfaceBeingRendered_, surfaceData);\n\t\tsurfaceData.componentData = this.buildComponentConfigData_(id, data);\n\t\treturn this.buildPlaceholder(id, surfaceData);\n\t}\n\n\t/**\n\t * Handles a call to the soy function for getting delegate functions.\n\t * @param {string} templateComponentName The name of the component that this template was belongs to.\n\t * @param {string} templateName The name of this template.\n\t * @param {!function()} originalFn The original template function that was intercepted.\n\t * @param {!Object} data The data the template was called with.\n\t * @param {*} opt_ignored\n\t * @param {Object} opt_ijData Template injected data object.\n\t * @return {string}\n\t * @protected\n\t */\n\thandleInterceptedCall_(templateComponentName, templateName, originalFn, data, opt_ignored, opt_ijData) {\n\t\tif (this.skipInnerCalls_) {\n\t\t\treturn '';\n\t\t} else if (templateName === 'content') {\n\t\t\treturn this.handleComponentCall_.call(this, templateComponentName, data);\n\t\t} else {\n\t\t\treturn this.handleSurfaceCall_.call(this, templateComponentName, templateName, originalFn, data, opt_ignored, opt_ijData);\n\t\t}\n\t}\n\n\t/**\n\t * Handles a call to the SoyComponent surface template.\n\t * @param {string} templateComponentName The name of the component that this template was belongs to.\n\t * @param {string} templateName The name of this template.\n\t * @param {!function()} originalFn The original template function that was intercepted.\n\t * @param {!Object} data The data the template was called with.\n\t * @param {*} opt_ignored\n\t * @param {Object} opt_ijData Template injected data object.\n\t * @return {string} A placeholder to be rendered instead of the content the template\n\t *   function would have returned.\n\t * @protected\n\t */\n\thandleSurfaceCall_(templateComponentName, templateName, originalFn, data, opt_ignored, opt_ijData) {\n\t\tvar surfaceData = {\n\t\t\tstatic: originalFn.static,\n\t\t\ttemplateComponentName: templateComponentName,\n\t\t\ttemplateData: data,\n\t\t\ttemplateName: templateName\n\t\t};\n\t\tvar surfaceElementId;\n\t\tif (core.isDefAndNotNull(data.surfaceId)) {\n\t\t\tsurfaceElementId = this.getSurfaceElementId_(data.surfaceId.toString());\n\t\t} else {\n\t\t\tif (originalFn.private) {\n\t\t\t\treturn originalFn.call(null, data, opt_ignored, opt_ijData);\n\t\t\t}\n\t\t\tsurfaceElementId = this.generateSurfaceElementId_(this.surfaceBeingRendered_, surfaceData);\n\t\t}\n\t\treturn this.buildPlaceholder(surfaceElementId, surfaceData);\n\t}\n\n\t/**\n\t * Checks if a template is a surface template.\n\t * @param {string} templateName\n\t * @param {!function()} templateFn\n\t * @return {boolean}\n\t * @protected\n\t */\n\tisSurfaceTemplate_(templateName, templateFn) {\n\t\treturn templateName !== 'content' && templateName.substr(0, 13) !== '__deltemplate' && !templateFn.private;\n\t}\n\n\t/**\n\t * Renders the given soy template function, instantiating any referenced components in it.\n\t * @param {!function()} templateFn\n\t * @param {(Element|string)=} opt_element The element that should be decorated. If none is given,\n\t *   one will be created and appended to the document body.\n\t * @param {Object=} opt_data Data to be passed to the soy template when it's called.\n\t * @return {!SoyComponent} The component that was created for this action. Contains\n\t *   references to components that were rendered by the given template function.\n\t * @static\n\t */\n\tstatic renderFromTemplate(templateFn, opt_element, opt_data) {\n\t\treturn SoyComponent.createComponentFromTemplate(templateFn, opt_element, opt_data).render();\n\t}\n\n\t/**\n\t * Renders the specified template.\n\t * @param {!function()} templateFn\n\t * @param {Object=} opt_data\n\t * @return {string} The template's result content.\n\t */\n\trenderTemplate_(templateFn, opt_data) {\n\t\tSoyComponentAop.startInterception(this.handleInterceptedCall_.bind(this));\n\t\ttemplateFn = SoyComponentAop.getOriginalFn(templateFn);\n\t\tvar content = templateFn(opt_data || this.buildTemplateData_(), null, ijData).content;\n\t\tSoyComponentAop.stopInterception();\n\t\treturn content;\n\t}\n\n\t/**\n\t * Renders the template with the specified name.\n\t * @param {string} templateComponentName\n\t * @param {string} templateName\n\t * @param {Object=} opt_data\n\t * @return {string} The template's result content.\n\t */\n\trenderTemplateByName_(templateComponentName, templateName, opt_data) {\n\t\tvar elementTemplate;\n\t\tvar componentTemplates = ComponentRegistry.Templates[templateComponentName];\n\t\tif (componentTemplates) {\n\t\t\telementTemplate = componentTemplates[templateName];\n\t\t}\n\n\t\tif (core.isFunction(elementTemplate)) {\n\t\t\treturn this.renderTemplate_(elementTemplate, opt_data);\n\t\t}\n\t}\n\n\t/**\n\t * Sanitizes the given html string, so it can skip escaping when passed to a\n\t * soy template.\n\t * @param {string} html\n\t * @return {soydata.SanitizedHtml}\n\t * @static\n\t */\n\tstatic sanitizeHtml(html) {\n\t\treturn soydata.VERY_UNSAFE.ordainSanitizedHtml(html);\n\t}\n\n\t/**\n\t * Sets the injected data object that should be passed to templates.\n\t * @param {Object} data\n\t * @static\n\t */\n\tstatic setInjectedData(data) {\n\t\tijData = data || {};\n\t}\n\n\t/**\n\t * Overrides the original method from `Component` so only the outer soy\n\t * template returns content, as we only need to render the parent tag here.\n\t * @return {!Element}\n\t * @protected\n\t * @override\n\t */\n\tvalueElementFn_() {\n\t\tthis.skipInnerCalls_ = true;\n\t\tvar element = super.valueElementFn_();\n\t\tthis.skipInnerCalls_ = false;\n\t\treturn element;\n\t}\n}\n\nvar originalSanitizedHtmlFromFn = soydata.SanitizedHtml.from;\nsoydata.SanitizedHtml.from = function(value) {\n\tif (value && value.contentKind === 'HTML') {\n\t\tvalue = SoyComponent.sanitizeHtml(value.content);\n\t}\n\treturn originalSanitizedHtmlFromFn(value);\n};\n\n\nexport default SoyComponent;\n"],"sourceRoot":"/source/"}