{"version":3,"sources":["D:/Projects/Liferay/portal/modules/frontend/frontend-js-metal-web/bower_components/metal/src/dom/dom.js"],"names":[],"mappings":"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","file":"bower_components/metal/src/dom/dom.js","sourcesContent":["'use strict';\n\nimport core from '../core';\nimport object from '../object/object';\nimport DomEventHandle from '../events/DomEventHandle';\n\nclass dom {\n\t/**\n\t * Adds the requested CSS classes to an element.\n\t * @param {!Element} element The element to add CSS classes to.\n\t * @param {string} classes CSS classes to add.\n\t */\n\tstatic addClasses(element, classes) {\n\t\tif (!core.isObject(element) || !core.isString(classes)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ('classList' in element) {\n\t\t\tdom.addClassesWithNative_(element, classes);\n\t\t} else {\n\t\t\tdom.addClassesWithoutNative_(element, classes);\n\t\t}\n\t}\n\n\t/**\n\t * Adds the requested CSS classes to an element using classList.\n\t * @param {!Element} element The element to add CSS classes to.\n\t * @param {string} classes CSS classes to add.\n\t * @protected\n\t */\n\tstatic addClassesWithNative_(element, classes) {\n\t\tclasses.split(' ').forEach(function(className) {\n\t\t\telement.classList.add(className);\n\t\t});\n\t}\n\n\t/**\n\t * Adds the requested CSS classes to an element without using classList.\n\t * @param {!Element} element The element to add CSS classes to.\n\t * @param {string} classes CSS classes to add.\n\t * @protected\n\t */\n\tstatic addClassesWithoutNative_(element, classes) {\n\t\tvar elementClassName = ' ' + element.className + ' ';\n\t\tvar classesToAppend = '';\n\n\t\tclasses = classes.split(' ');\n\n\t\tfor (var i = 0; i < classes.length; i++) {\n\t\t\tvar className = classes[i];\n\n\t\t\tif (elementClassName.indexOf(' ' + className + ' ') === -1) {\n\t\t\t\tclassesToAppend += ' ' + className;\n\t\t\t}\n\t\t}\n\n\t\tif (classesToAppend) {\n\t\t\telement.className = element.className + classesToAppend;\n\t\t}\n\t}\n\n\t/**\n\t * Appends a child node with text or other nodes to a parent node. If\n\t * child is a HTML string it will be automatically converted to a document\n\t * fragment before appending it to the parent.\n\t * @param {!Element} parent The node to append nodes to.\n\t * @param {!(Element|NodeList|string)} child The thing to append to the parent.\n\t * @return {!Element} The appended child.\n\t */\n\tstatic append(parent, child) {\n\t\tif (core.isString(child)) {\n\t\t\tchild = dom.buildFragment(child);\n\t\t}\n\t\tif (child instanceof NodeList) {\n\t\t\tvar childArr = Array.prototype.slice.call(child);\n\t\t\tfor (var i = 0; i < childArr.length; i++) {\n\t\t\t\tparent.appendChild(childArr[i]);\n\t\t\t}\n\t\t} else {\n\t\t\tparent.appendChild(child);\n\t\t}\n\t\treturn child;\n\t}\n\n\t/**\n\t * Helper for converting a HTML string into a document fragment.\n\t * @param {string} htmlString The HTML string to convert.\n\t * @return {!Element} The resulting document fragment.\n\t */\n\tstatic buildFragment(htmlString) {\n\t\tvar tempDiv = document.createElement('div');\n\t\ttempDiv.innerHTML = '<br>' + htmlString;\n\t\ttempDiv.removeChild(tempDiv.firstChild);\n\n\t\tvar fragment = document.createDocumentFragment();\n\t\twhile (tempDiv.firstChild) {\n\t\t\tfragment.appendChild(tempDiv.firstChild);\n\t\t}\n\t\treturn fragment;\n\t}\n\n\t/**\n\t * Checks if the first element contains the second one.\n\t * @param {!Element} element1\n\t * @param {!Element} element2\n\t * @return {boolean}\n\t */\n\tstatic contains(element1, element2) {\n\t\tif (core.isDocument(element1)) {\n\t\t\t// document.contains is not defined on IE9, so call it on documentElement instead.\n\t\t\treturn element1.documentElement.contains(element2);\n\t\t} else {\n\t\t\treturn element1.contains(element2);\n\t\t}\n\t}\n\n\t/**\n\t * Listens to the specified event on the given DOM element, but only calls the\n\t * callback with the event when it triggered by elements that match the given\n\t * selector.\n\t * @param {!Element} element The container DOM element to listen to the event on.\n\t * @param {string} eventName The name of the event to listen to.\n\t * @param {string} selector The selector that matches the child elements that\n\t *   the event should be triggered for.\n\t * @param {!function(!Object)} callback Function to be called when the event is\n\t *   triggered. It will receive the normalized event object.\n\t * @return {!DomEventHandle} Can be used to remove the listener.\n\t */\n\tstatic delegate(element, eventName, selector, callback) {\n\t\tvar customConfig = dom.customEvents[eventName];\n\t\tif (customConfig && customConfig.delegate) {\n\t\t\teventName = customConfig.originalEvent;\n\t\t\tcallback = customConfig.handler.bind(customConfig, callback);\n\t\t}\n\t\treturn dom.on(\n\t\t\telement,\n\t\t\teventName,\n\t\t\tdom.handleDelegateEvent_.bind(null, selector, callback)\n\t\t);\n\t}\n\n\t/**\n\t * Inserts node in document as last element.\n\t * @param {Element} node Element to remove children from.\n\t */\n\tstatic enterDocument(node) {\n\t\tdom.append(document.body, node);\n\t}\n\n\t/**\n\t * Removes node from document.\n\t * @param {Element} node Element to remove children from.\n\t */\n\tstatic exitDocument(node) {\n\t\tif (node.parentNode) {\n\t\t\tnode.parentNode.removeChild(node);\n\t\t}\n\t}\n\n\t/**\n\t * This is called when an event is triggered by a delegate listener (see\n\t * `dom.delegate` for more details).\n\t * @param {string} selector The selector or element that matches the child\n\t *   elements that the event should be triggered for.\n\t * @param {!function(!Object)} callback Function to be called when the event\n\t *   is triggered. It will receive the normalized event object.\n\t * @param {!Event} event The event payload.\n\t * @return {boolean} False if at least one of the triggered callbacks returns\n\t *   false, or true otherwise.\n\t */\n\tstatic handleDelegateEvent_(selector, callback, event) {\n\t\tdom.normalizeDelegateEvent_(event);\n\n\t\tvar currentElement = event.target;\n\t\tvar returnValue = true;\n\n\t\twhile (currentElement && !event.stopped) {\n\t\t\tif (core.isString(selector) && dom.match(currentElement, selector)) {\n\t\t\t\tevent.delegateTarget = currentElement;\n\t\t\t\treturnValue &= callback(event);\n\t\t\t}\n\t\t\tif (currentElement === event.currentTarget) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcurrentElement = currentElement.parentNode;\n\t\t}\n\t\tevent.delegateTarget = null;\n\n\t\treturn returnValue;\n\t}\n\n\t/**\n\t * Checks if the given element has the requested css class.\n\t * @param {!Element} element\n\t * @param {string} className\n\t * @return {boolean}\n\t */\n\tstatic hasClass(element, className) {\n\t\tif ('classList' in element) {\n\t\t\treturn dom.hasClassWithNative_(element, className);\n\t\t} else {\n\t\t\treturn dom.hasClassWithoutNative_(element, className);\n\t\t}\n\t}\n\n\t/**\n\t * Checks if the given element has the requested css class using classList.\n\t * @param {!Element} element\n\t * @param {string} className\n\t * @return {boolean}\n\t * @protected\n\t */\n\tstatic hasClassWithNative_(element, className) {\n\t\treturn element.classList.contains(className);\n\t}\n\n\t/**\n\t * Checks if the given element has the requested css class without using classList.\n\t * @param {!Element} element\n\t * @param {string} className\n\t * @return {boolean}\n\t * @protected\n\t */\n\tstatic hasClassWithoutNative_(element, className) {\n\t\treturn (' ' + element.className + ' ').indexOf(' ' + className + ' ') >= 0;\n\t}\n\n\t/**\n\t * Checks if the given element is empty or not.\n\t * @param {!Element} element\n\t * @return {boolean}\n\t */\n\tstatic isEmpty(element) {\n\t\treturn element.childNodes.length === 0;\n\t}\n\n\t/**\n\t * Check if an element matches a given selector.\n\t * @param {Element} element\n\t * @param {string} selector\n\t * @return {boolean}\n\t */\n\tstatic match(element, selector) {\n\t\tif (!element || element.nodeType !== 1) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar p = Element.prototype;\n\t\tvar m = p.matches || p.webkitMatchesSelector || p.mozMatchesSelector || p.msMatchesSelector || p.oMatchesSelector;\n\t\tif (m) {\n\t\t\treturn m.call(element, selector);\n\t\t}\n\n\t\treturn dom.matchFallback_(element, selector);\n\t}\n\n\t/**\n\t * Check if an element matches a given selector, using an internal implementation\n\t * instead of calling existing javascript functions.\n\t * @param {Element} element\n\t * @param {string} selector\n\t * @return {boolean}\n\t * @protected\n\t */\n\tstatic matchFallback_(element, selector) {\n\t\tvar nodes = document.querySelectorAll(selector, element.parentNode);\n\t\tfor (var i = 0; i < nodes.length; ++i) {\n\t\t\tif (nodes[i] === element) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Normalizes the event payload for delegate listeners.\n\t * @param {!Event} event\n\t */\n\tstatic normalizeDelegateEvent_(event) {\n\t\tevent.stopPropagation = dom.stopPropagation_;\n\t\tevent.stopImmediatePropagation = dom.stopImmediatePropagation_;\n\t}\n\n\t/**\n\t * Listens to the specified event on the given DOM element. This function normalizes\n\t * DOM event payloads and functions so they'll work the same way on all supported\n\t * browsers.\n\t * @param {!Element|string} element The DOM element to listen to the event on, or\n\t *   a selector that should be delegated on the entire document.\n\t * @param {string} eventName The name of the event to listen to.\n\t * @param {!function(!Object)} callback Function to be called when the event is\n\t *   triggered. It will receive the normalized event object.\n\t * @param {boolean} opt_capture Flag indicating if listener should be triggered\n\t *   during capture phase, instead of during the bubbling phase. Defaults to false.\n\t * @return {!DomEventHandle} Can be used to remove the listener.\n\t */\n\tstatic on(element, eventName, callback, opt_capture) {\n\t\tif (core.isString(element)) {\n\t\t\treturn dom.delegate(document, eventName, element, callback);\n\t\t}\n\t\tvar customConfig = dom.customEvents[eventName];\n\t\tif (customConfig && customConfig.event) {\n\t\t\teventName = customConfig.originalEvent;\n\t\t\tcallback = customConfig.handler.bind(customConfig, callback);\n\t\t}\n\t\telement.addEventListener(eventName, callback, opt_capture);\n\t\treturn new DomEventHandle(element, eventName, callback, opt_capture);\n\t}\n\n\t/**\n\t * Listens to the specified event on the given DOM element once. This\n\t * function normalizes DOM event payloads and functions so they'll work the\n\t * same way on all supported browsers.\n\t * @param {!Element} element The DOM element to listen to the event on.\n\t * @param {string} eventName The name of the event to listen to.\n\t * @param {!function(!Object)} callback Function to be called when the event\n\t *   is triggered. It will receive the normalized event object.\n\t * @return {!DomEventHandle} Can be used to remove the listener.\n\t */\n\tstatic once(element, eventName, callback) {\n\t\tvar domEventHandle = this.on(element, eventName, function() {\n\t\t\tdomEventHandle.removeListener();\n\t\t\treturn callback.apply(this, arguments);\n\t\t});\n\t\treturn domEventHandle;\n\t}\n\n\t/**\n\t * Registers a custom event.\n\t * @param {string} eventName The name of the custom event.\n\t * @param {!Object} customConfig An object with information about how the event\n\t *   should be handled.\n\t */\n\tstatic registerCustomEvent(eventName, customConfig) {\n\t\tdom.customEvents[eventName] = customConfig;\n\t}\n\n\t/**\n\t * Removes all the child nodes on a DOM node.\n\t * @param {Element} node Element to remove children from.\n\t */\n\tstatic removeChildren(node) {\n\t\tvar child;\n\t\twhile ((child = node.firstChild)) {\n\t\t\tnode.removeChild(child);\n\t\t}\n\t}\n\n\t/**\n\t * Removes the requested CSS classes from an element.\n\t * @param {!Element} element The element to remove CSS classes from.\n\t * @param {string} classes CSS classes to remove.\n\t */\n\tstatic removeClasses(element, classes) {\n\t\tif (!core.isObject(element) || !core.isString(classes)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ('classList' in element) {\n\t\t\tdom.removeClassesWithNative_(element, classes);\n\t\t} else {\n\t\t\tdom.removeClassesWithoutNative_(element, classes);\n\t\t}\n\t}\n\n\t/**\n\t * Removes the requested CSS classes from an element using classList.\n\t * @param {!Element} element The element to remove CSS classes from.\n\t * @param {string} classes CSS classes to remove.\n\t * @protected\n\t */\n\tstatic removeClassesWithNative_(element, classes) {\n\t\tclasses.split(' ').forEach(function(className) {\n\t\t\telement.classList.remove(className);\n\t\t});\n\t}\n\n\t/**\n\t * Removes the requested CSS classes from an element without using classList.\n\t * @param {!Element} element The element to remove CSS classes from.\n\t * @param {string} classes CSS classes to remove.\n\t * @protected\n\t */\n\tstatic removeClassesWithoutNative_(element, classes) {\n\t\tvar elementClassName = ' ' + element.className + ' ';\n\n\t\tclasses = classes.split(' ');\n\n\t\tfor (var i = 0; i < classes.length; i++) {\n\t\t\telementClassName = elementClassName.replace(' ' + classes[i] + ' ', ' ');\n\t\t}\n\n\t\telement.className = elementClassName.trim();\n\t}\n\n\t/**\n\t * Replaces the first element with the second.\n\t * @param {Element} element1\n\t * @param {Element} element2\n\t */\n\tstatic replace(element1, element2) {\n\t\tif (element1 && element2 && element1 !== element2) {\n\t\t\telement1.parentNode.insertBefore(element2, element1);\n\t\t\telement1.parentNode.removeChild(element1);\n\t\t}\n\t}\n\n\t/**\n\t * The function that replaces `stopImmediatePropagation_` for events.\n\t * @protected\n\t */\n\tstatic stopImmediatePropagation_() {\n\t\tthis.stopped = true;\n\t\tEvent.prototype.stopImmediatePropagation.call(this);\n\t}\n\n\t/**\n\t * The function that replaces `stopPropagation` for events.\n\t * @protected\n\t */\n\tstatic stopPropagation_() {\n\t\tthis.stopped = true;\n\t\tEvent.prototype.stopPropagation.call(this);\n\t}\n\n\t/**\n\t * Checks if the given element supports the given event type.\n\t * @param {!Element|string} element The DOM element or element tag name to check.\n\t * @param {string} eventName The name of the event to check.\n\t * @return {boolean}\n\t */\n\tstatic supportsEvent(element, eventName) {\n\t\tif (dom.customEvents[eventName]) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (core.isString(element)) {\n\t\t\tif (!elementsByTag[element]) {\n\t\t\t\telementsByTag[element] = document.createElement(element);\n\t\t\t}\n\t\t\telement = elementsByTag[element];\n\t\t}\n\t\treturn 'on' + eventName in element;\n\t}\n\n\t/**\n\t * Converts the given argument to a DOM element. Strings are assumed to\n\t * be selectors, and so a matched element will be returned. If the arg\n\t * is already a DOM element it will be the return value.\n\t * @param {string|Element|Document} selectorOrElement\n\t * @return {Element} The converted element, or null if none was found.\n\t */\n\tstatic toElement(selectorOrElement) {\n\t\tif (core.isElement(selectorOrElement) || core.isDocument(selectorOrElement)) {\n\t\t\treturn selectorOrElement;\n\t\t} else if (core.isString(selectorOrElement)) {\n\t\t\tif (selectorOrElement[0] === '#' && selectorOrElement.indexOf(' ') === -1) {\n\t\t\t\treturn document.getElementById(selectorOrElement.substr(1));\n\t\t\t} else {\n\t\t\t\treturn document.querySelector(selectorOrElement);\n\t\t\t}\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Adds or removes one or more classes from an element. If any of the classes\n\t * is present, it will be removed from the element, or added otherwise.\n\t * @param {!Element} element The element which classes will be toggled.\n\t * @param {string} classes The classes which have to added or removed from the element.\n\t */\n\tstatic toggleClasses(element, classes) {\n\t\tif (!core.isObject(element) || !core.isString(classes)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ('classList' in element) {\n\t\t\tdom.toggleClassesWithNative_(element, classes);\n\t\t} else {\n\t\t\tdom.toggleClassesWithoutNative_(element, classes);\n\t\t}\n\t}\n\n\t/**\n\t * Adds or removes one or more classes from an element using classList.\n\t * If any of the classes is present, it will be removed from the element,\n\t * or added otherwise.\n\t * @param {!Element} element The element which classes will be toggled.\n\t * @param {string} classes The classes which have to added or removed from the element.\n\t */\n\tstatic toggleClassesWithNative_(element, classes) {\n\t\tclasses.split(' ').forEach(function(className) {\n\t\t\telement.classList.toggle(className);\n\t\t});\n\t}\n\n\t/**\n\t * Adds or removes one or more classes from an element without using classList.\n\t * If any of the classes is present, it will be removed from the element,\n\t * or added otherwise.\n\t * @param {!Element} element The element which classes will be toggled.\n\t * @param {string} classes The classes which have to added or removed from the element.\n\t */\n\tstatic toggleClassesWithoutNative_(element, classes) {\n\t\tvar elementClassName = ' ' + element.className + ' ';\n\n\t\tclasses = classes.split(' ');\n\n\t\tfor (var i = 0; i < classes.length; i++) {\n\t\t\tvar className = ' ' + classes[i] + ' ';\n\t\t\tvar classIndex = elementClassName.indexOf(className);\n\n\t\t\tif (classIndex === -1) {\n\t\t\t\telementClassName = elementClassName + classes[i] + ' ';\n\t\t\t} else {\n\t\t\t\telementClassName = elementClassName.substring(0, classIndex) + ' ' +\n\t\t\t\t\telementClassName.substring(classIndex + className.length);\n\t\t\t}\n\t\t}\n\n\t\telement.className = elementClassName.trim();\n\t}\n\n\t/**\n\t * Triggers the specified event on the given element.\n\t * NOTE: This should mostly be used for testing, not on real code.\n\t * @param {!Element} element The node that should trigger the event.\n\t * @param {string} eventName The name of the event to be triggred.\n\t * @param {Object=} opt_eventObj An object with data that should be on the\n\t *   triggered event's payload.\n\t */\n\tstatic triggerEvent(element, eventName, opt_eventObj) {\n\t\tvar eventObj = document.createEvent('HTMLEvents');\n\t\teventObj.initEvent(eventName, true, true);\n\t\tobject.mixin(eventObj, opt_eventObj);\n\t\telement.dispatchEvent(eventObj);\n\t}\n}\n\nvar elementsByTag = {};\ndom.customEvents = {};\n\nexport default dom;\n"],"sourceRoot":"/source/"}