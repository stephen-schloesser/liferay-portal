{"version":3,"sources":["D:/Projects/Liferay/portal/modules/frontend/frontend-js-metal-web/bower_components/metal/src/component/EventsCollector.js"],"names":[],"mappings":"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","file":"bower_components/metal/src/component/EventsCollector.js","sourcesContent":["'use strict';\n\nimport core from '../core';\nimport ComponentCollector from '../component/ComponentCollector';\nimport Disposable from '../disposable/Disposable';\nimport EventHandler from '../events/EventHandler';\n\n/**\n * Collects inline events from a passed element, detaching previously\n * attached events that are not being used anymore.\n * @param {Component} component\n * @constructor\n * @extends {Disposable}\n */\nclass EventsCollector extends Disposable {\n\tconstructor(component) {\n\t\tsuper();\n\n\t\tif (!component) {\n\t\t\tthrow new Error('The component instance is mandatory');\n\t\t}\n\n\t\t/**\n\t\t * Holds the component intance.\n\t\t * @type {!Component}\n\t\t * @protected\n\t\t */\n\t\tthis.component_ = component;\n\n\t\t/**\n\t\t * Holds the attached delegate event handles, indexed by the css selector.\n\t\t * @type {!Object<string, EventHandler>}\n\t\t * @protected\n\t\t */\n\t\tthis.eventHandles_ = {};\n\n\t\t/**\n\t\t * Holds flags indicating which selectors a group has listeners for.\n\t\t * @type {!Object<string, !Object<string, boolean>>}\n\t\t * @protected\n\t\t */\n\t\tthis.groupHasListener_ = {};\n\t}\n\n\t/**\n\t * Attaches the listener described by the given params, unless it has already\n\t * been attached.\n\t * @param {string} eventType\n\t * @param {string} fnNamesString\n\t * @param {boolean} permanent\n\t * @protected\n\t */\n\tattachListener_(eventType, fnNamesString, groupName) {\n\t\tvar selector = '[data-on' + eventType + '=\"' + fnNamesString + '\"]';\n\n\t\tthis.groupHasListener_[groupName][selector] = true;\n\n\t\tif (!this.eventHandles_[selector]) {\n\t\t\tthis.eventHandles_[selector] = new EventHandler();\n\t\t\tvar fnNames = fnNamesString.split(',');\n\t\t\tfor (var i = 0; i < fnNames.length; i++) {\n\t\t\t\tvar fn = this.getListenerFn(fnNames[i]);\n\t\t\t\tif (fn) {\n\t\t\t\t\tthis.eventHandles_[selector].add(this.component_.delegate(eventType, selector, this.onEvent_.bind(this, fn)));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Attaches all listeners declared as attributes on the given element and\n\t * its children.\n\t * @param {string} content\n\t * @param {boolean} groupName\n\t */\n\tattachListeners(content, groupName) {\n\t\tif (!core.isString(content)) {\n\t\t\treturn;\n\t\t}\n\t\tthis.groupHasListener_[groupName] = {};\n\t\tthis.attachListenersFromHtml_(content, groupName);\n\t}\n\n\t/**\n\t * Attaches listeners found in the given html content.\n\t * @param {string} content\n\t * @param {boolean} groupName\n\t * @protected\n\t */\n\tattachListenersFromHtml_(content, groupName) {\n\t\tif (content.indexOf('data-on') === -1) {\n\t\t\treturn;\n\t\t}\n\t\tvar regex = /data-on([a-z]+)=['\"]([^'\"]+)['\"]/g;\n\t\tvar match = regex.exec(content);\n\t\twhile (match) {\n\t\t\tthis.attachListener_(match[1], match[2], groupName);\n\t\t\tmatch = regex.exec(content);\n\t\t}\n\t}\n\n\t/**\n\t * Removes all previously attached event listeners to the component.\n\t */\n\tdetachAllListeners() {\n\t\tfor (var selector in this.eventHandles_) {\n\t\t\tif (this.eventHandles_[selector]) {\n\t\t\t\tthis.eventHandles_[selector].removeAllListeners();\n\t\t\t}\n\t\t}\n\t\tthis.eventHandles_ = {};\n\t\tthis.listenerCounts_ = {};\n\t}\n\n\t/**\n\t * Detaches all existing listeners that are not being used anymore.\n\t * @protected\n\t */\n\tdetachUnusedListeners() {\n\t\tfor (var selector in this.eventHandles_) {\n\t\t\tif (this.eventHandles_[selector]) {\n\t\t\t\tvar unused = true;\n\t\t\t\tfor (var groupName in this.groupHasListener_) {\n\t\t\t\t\tif (this.groupHasListener_[groupName][selector]) {\n\t\t\t\t\t\tunused = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (unused) {\n\t\t\t\t\tthis.eventHandles_[selector].removeAllListeners();\n\t\t\t\t\tthis.eventHandles_[selector] = null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdisposeInternal() {\n\t\tthis.detachAllListeners();\n\t\tthis.component_ = null;\n\t}\n\n\t/**\n\t * Gets the listener function from its name. If the name is prefixed with a\n\t * component id, the function will be called on that specified component. Otherwise\n\t * it will be called on this event collector's component instead.\n\t * @param {string} fnName\n\t * @return {function()}\n\t */\n\tgetListenerFn(fnName) {\n\t\tvar fnComponent;\n\t\tvar split = fnName.split(':');\n\t\tif (split.length === 2) {\n\t\t\tfnName = split[1];\n\t\t\tfnComponent = ComponentCollector.components[split[0]];\n\t\t\tif (!fnComponent) {\n\t\t\t\tconsole.error('No component with the id \"' + split[0] + '\" has been collected' +\n\t\t\t\t\t'yet. Make sure that you specify an id for an existing component when ' +\n\t\t\t\t\t'adding inline listeners.'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tfnComponent = fnComponent || this.component_;\n\t\tif (core.isFunction(fnComponent[fnName])) {\n\t\t\treturn fnComponent[fnName].bind(fnComponent);\n\t\t} else {\n\t\t\tconsole.error('No function named \"' + fnName + '\" was found in the component with id \"' +\n\t\t\t\tfnComponent.id + '\". Make sure that you specify valid function names when adding ' +\n\t\t\t\t'inline listeners.'\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Checks if this EventsCollector instance has already attached listeners for the given\n\t * group before.\n\t * @param  {string} group\n\t * @return {boolean}\n\t */\n\thasAttachedForGroup(group) {\n\t\treturn !!this.groupHasListener_.hasOwnProperty(group);\n\t}\n\n\t/**\n\t * Fires when an event that was registered by this collector is triggered. Makes\n\t * sure that the event was meant for this component and calls the appropriate\n\t * listener function for it.\n\t * @param {!function(!Object)} fn\n\t * @param {!Object} event\n\t * @return {*} The return value of the call to the listener function, or undefined\n\t *   if no function was called.\n\t * @protected\n\t */\n\tonEvent_(fn, event) {\n\t\t// This check prevents parent components from handling their child inline listeners.\n\t\tvar eventComp = event.handledByComponent;\n\t\tif (!eventComp || eventComp === this.component_ || event.delegateTarget.contains(eventComp.element)) {\n\t\t\tevent.handledByComponent = this.component_;\n\t\t\treturn fn(event);\n\t\t}\n\t}\n}\n\nexport default EventsCollector;\n"],"sourceRoot":"/source/"}