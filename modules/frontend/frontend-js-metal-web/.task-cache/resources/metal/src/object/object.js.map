{"version":3,"sources":["D:/Projects/Liferay/portal/modules/frontend/frontend-js-metal-web/bower_components/metal/src/object/object.js"],"names":[],"mappings":";AAAA,aAAY,CAAC;;;;;;;;;;KAIP,MAAM;WAAN,MAAM;yBAAN,MAAM;;;eAAN,MAAM;;;;;;;;;UAOC,eAAC,MAAM,EAAE;AACpB,QAAI,GAAG,EAAE,MAAM,CAAC;AAChB,SAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC1C,WAAM,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;AACtB,UAAK,GAAG,IAAI,MAAM,EAAE;AACnB,YAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;MAC1B;KACD;AACD,WAAO,MAAM,CAAC;IACd;;;;;;;;;;;UASqB,yBAAC,IAAI,EAAE,OAAO,EAAE;AACrC,QAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAC5B,QAAI,GAAG,GAAG,OAAO,IAAI,MAAM,CAAC;AAC5B,QAAI,IAAI,CAAC;AACT,WAAQ,IAAI,GAAG,KAAK,CAAC,KAAK,EAAE,EAAG;AAC9B,SAAI,iBAAK,eAAe,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE;AACpC,SAAG,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC;MAChB,MAAM;AACN,aAAO,IAAI,CAAC;MACZ;KACD;AACD,WAAO,GAAG,CAAC;IACX;;;SArCI,MAAM;;;kBAwCG,MAAM","file":"bower_components/metal/src/object/object.js","sourcesContent":["'use strict';\n\nimport core from '../core';\n\nclass object {\n\t/**\n\t * Copies all the members of a source object to a target object.\n\t * @param {Object} target Target object.\n\t * @param {...Object} var_args The objects from which values will be copied.\n\t * @return {Object} Returns the target object reference.\n\t */\n\tstatic mixin(target) {\n\t\tvar key, source;\n\t\tfor (var i = 1; i < arguments.length; i++) {\n\t\t\tsource = arguments[i];\n\t\t\tfor (key in source) {\n\t\t\t\ttarget[key] = source[key];\n\t\t\t}\n\t\t}\n\t\treturn target;\n\t}\n\n\t/**\n\t * Returns an object based on its fully qualified external name.\n\t * @param {string} name The fully qualified name.\n\t * @param {object=} opt_obj The object within which to look; default is\n\t *     <code>window</code>.\n\t * @return {?} The value (object or primitive) or, if not found, null.\n\t */\n\tstatic getObjectByName(name, opt_obj) {\n\t\tvar parts = name.split('.');\n\t\tvar cur = opt_obj || window;\n\t\tvar part;\n\t\twhile ((part = parts.shift())) {\n\t\t\tif (core.isDefAndNotNull(cur[part])) {\n\t\t\t\tcur = cur[part];\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t\treturn cur;\n\t}\n}\n\nexport default object;\n"],"sourceRoot":"/source/"}