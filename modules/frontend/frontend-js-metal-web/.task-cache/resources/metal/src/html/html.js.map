{"version":3,"sources":["D:/Projects/Liferay/portal/modules/frontend/frontend-js-metal-web/bower_components/metal/src/html/html.js"],"names":[],"mappings":";AAAA,aAAY,CAAC;;;;;;;;;;;;KAKP,IAAI;WAAJ,IAAI;yBAAJ,IAAI;;;;;;;;;eAAJ,IAAI;;;;;;;;;;;;;;;;;;;;;;;;UAsBM,kBAAC,UAAU,EAAE;AAC3B,QAAI,SAAS,GAAG,EAAE,CAAC;AACnB,cAAU,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;AACzD,cAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;AAC/C,cAAU,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;AAC9C,cAAU,GAAG,IAAI,CAAC,qBAAqB,CAAC,UAAU,CAAC,CAAC;AACpD,cAAU,GAAG,IAAI,CAAC,uBAAuB,CAAC,UAAU,CAAC,CAAC;AACtD,cAAU,GAAG,IAAI,CAAC,uBAAuB,CAAC,UAAU,CAAC,CAAC;AACtD,cAAU,GAAG,IAAI,CAAC,wBAAwB,CAAC,UAAU,CAAC,CAAC;AACvD,cAAU,GAAG,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;AACvD,WAAO,UAAU,CAAC,IAAI,EAAE,CAAC;IACzB;;;;;;;;;;UAQ6B,iCAAC,UAAU,EAAE;AAC1C,WAAO,mBAAO,sBAAsB,CAAC,UAAU,CAAC,CAAC;IACjD;;;;;;;;;;;;;;UAYgC,oCAAC,UAAU,EAAE,OAAO,EAAE;AACtD,QAAI,MAAM,GAAG,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AACzC,QAAI,MAAM,GAAG,CAAC,CAAC,EAAE;AAChB,WAAM,IAAI,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;KACxD;AACD,WAAO,MAAM,CAAC;IACd;;;;;;;;;;;;;;;UAaqB,yBAAC,UAAU,EAAE,SAAS,EAAE;AAC7C,cAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,UAAU,EAAE,SAAS,EAAE,cAAc,EAAE,SAAS,CAAC,CAAC;AACvF,cAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,UAAU,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;AAC/E,cAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,UAAU,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;AAC7E,cAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,UAAU,EAAE,SAAS,EAAE,UAAU,EAAE,SAAS,CAAC,CAAC;AACnF,cAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,UAAU,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;AACjF,cAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,UAAU,EAAE,WAAW,EAAE,YAAY,EAAE,SAAS,CAAC,CAAC;AACvF,WAAO,UAAU,CAAC;IAClB;;;;;;;;;;;;;;;;;;UAgBwB,4BAAC,UAAU,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE;AACnE,QAAI,SAAS,GAAG,IAAI,CAAC,0BAA0B,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;AACrE,WAAO,SAAS,GAAG,CAAC,CAAC,EAAE;AACtB,SAAI,SAAS,GAAG,UAAU,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC7C,eAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,UAAU,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;AACjF,eAAU,GAAG,UAAU,CAAC,OAAO,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;AACtD,eAAU,GAAG,UAAU,CAAC,OAAO,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;AACvD,cAAS,GAAG,IAAI,CAAC,0BAA0B,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;KACjE;AACD,cAAU,GAAG,UAAU,CAAC,OAAO,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;AACvD,cAAU,GAAG,UAAU,CAAC,OAAO,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC;AACxD,WAAO,UAAU,CAAC;IAClB;;;;;;;;;;;;;;;UAauB,2BAAC,UAAU,EAAE,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE;AAC3D,QAAI,OAAO,GAAG,YAAY,GAAG,iBAAK,MAAM,EAAE,GAAG,MAAM,CAAC;AACpD,aAAS,CAAC,OAAO,CAAC,GAAG,UAAU,CAAC,SAAS,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;AACtD,WAAO,mBAAO,eAAe,CAAC,UAAU,EAAE,KAAK,EAAE,GAAG,EAAE,OAAO,CAAC,CAAC;IAC/D;;;;;;;;;;;;;;;;;;UAgBwB,4BAAC,UAAU,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE;AACnE,QAAI,MAAM,GAAG,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AACzC,WAAO,MAAM,GAAG,CAAC,CAAC,EAAE;AACnB,SAAI,SAAS,GAAG,UAAU,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC;AAC/D,eAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,UAAU,EAAE,MAAM,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;AAC9E,WAAM,GAAG,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;KACrC;AACD,WAAO,UAAU,CAAC;IAClB;;;;;;;;;;;UASqB,yBAAC,UAAU,EAAE;AAClC,QAAI,SAAS,GAAG,EAAE,CAAC;AACnB,cAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,UAAU,EAAE,WAAW,EAAE,KAAK,EAAE,SAAS,CAAC,CAAC;AAChF,cAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,UAAU,EAAE,MAAM,EAAE,KAAK,EAAE,SAAS,CAAC,CAAC;AAC3E,cAAU,GAAG,IAAI,CAAC,uBAAuB,CAAC,UAAU,EAAE,SAAS,EAAE,EAAE,CAAC,CAAC;AACrE,WAAO,UAAU,CAAC;IAClB;;;;;;;;;;UAQ2B,+BAAC,UAAU,EAAE;AACxC,cAAU,GAAG,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,sBAAsB,EAAE,UAAU,CAAC,CAAC;AAClF,cAAU,GAAG,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,mBAAmB,EAAE,OAAO,CAAC,CAAC;AAC5E,cAAU,GAAG,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;AAClE,cAAU,GAAG,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,mBAAmB,EAAE,OAAO,CAAC,CAAC;AAC5E,WAAO,UAAU,CAAC;IAClB;;;;;;;;;;UAQ6B,iCAAC,UAAU,EAAE;AAC1C,cAAU,GAAG,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,cAAc,EAAE,MAAM,CAAC,CAAC;AACtE,cAAU,GAAG,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,EAAE,SAAS,CAAC,CAAC;AAC3E,WAAO,UAAU,CAAC;IAClB;;;;;;;;;;UAQ8B,kCAAC,UAAU,EAAE;AAC3C,WAAO,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAC;IAClE;;;;;;;;;;;;;;;UAa6B,iCAAC,UAAU,EAAE,SAAS,EAAE,YAAY,EAAE;AACnE,SAAK,IAAI,OAAO,IAAI,SAAS,EAAE;AAC9B,eAAU,GAAG,UAAU,CAAC,OAAO,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;KACvD;AACD,WAAO,UAAU,CAAC;IAClB;;;;;;;;;;UAQsB,0BAAC,UAAU,EAAE;AACnC,QAAI,SAAS,GAAG,EAAE,CAAC;AACnB,cAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,UAAU,EAAE,WAAW,EAAE,GAAG,EAAE,SAAS,CAAC,CAAC;AAC9E,cAAU,GAAG,IAAI,CAAC,uBAAuB,CAAC,UAAU,EAAE,SAAS,EAAE,iBAAiB,CAAC,CAAC;AACpF,WAAO,UAAU,CAAC;IAClB;;;;;;;;;;;;;UAWmB,uBAAC,UAAU,EAAE,SAAS,EAAE;AAC3C,SAAK,IAAI,OAAO,IAAI,SAAS,EAAE;AAC9B,eAAU,GAAG,UAAU,CAAC,OAAO,CAAC,OAAO,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;KAC7D;AACD,WAAO,UAAU,CAAC;IAClB;;;SAzPI,IAAI;;;AAiQV,KAAI,CAAC,QAAQ,GAAG;;;;AAIf,wBAAsB,EAAE,cAAc;;;;;AAKtC,qBAAmB,EAAE,WAAW;;;;;AAKhC,qBAAmB,EAAE,WAAW;;;;;AAKhC,cAAY,EAAE,QAAQ;;;;;AAKtB,oBAAkB,EAAE,kBAAkB;;;;;AAKtC,gBAAc,EAAE,8BAA8B;;;;;AAK9C,kBAAgB,EAAE,gCAAgC;EAClD,CAAC;;kBAEa,IAAI","file":"bower_components/metal/src/html/html.js","sourcesContent":["'use strict';\n\nimport core from '../core';\nimport string from '../string/string';\n\nclass html {\n\t/**\n\t * Minifies given HTML source by removing extra white spaces, comments and\n\t * other unneeded characters without breaking the content structure. As a\n\t * result HTML become smaller in size.\n\t * - Contents within <code>, <pre>, <script>, <style>, <textarea> and\n\t *   conditional comments tags are preserved.\n\t * - Comments are removed.\n\t * - Conditional comments are preserved.\n\t * - Breaking spaces are collapsed into a single space.\n\t * - Unneeded spaces inside tags (around = and before />) are removed.\n\t * - Spaces between tags are removed, even from inline-block elements.\n\t * - Spaces surrounding tags are removed.\n\t * - DOCTYPE declaration is simplified to <!DOCTYPE html>.\n\t * - Does not remove default attributes from <script>, <style>, <link>,\n\t *   <form>, <input>.\n\t * - Does not remove values from boolean tag attributes.\n\t * - Does not remove \"javascript:\" from in-line event handlers.\n\t * - Does not remove http:// and https:// protocols.\n\t * @param {string} htmlString Input HTML to be compressed.\n\t * @return {string} Compressed version of the HTML.\n\t */\n\tstatic compress(htmlString) {\n\t\tvar preserved = {};\n\t\thtmlString = html.preserveBlocks_(htmlString, preserved);\n\t\thtmlString = html.simplifyDoctype_(htmlString);\n\t\thtmlString = html.removeComments_(htmlString);\n\t\thtmlString = html.removeIntertagSpaces_(htmlString);\n\t\thtmlString = html.collapseBreakingSpaces_(htmlString);\n\t\thtmlString = html.removeSpacesInsideTags_(htmlString);\n\t\thtmlString = html.removeSurroundingSpaces_(htmlString);\n\t\thtmlString = html.returnBlocks_(htmlString, preserved);\n\t\treturn htmlString.trim();\n\t}\n\n\t/**\n\t * Collapses breaking spaces into a single space.\n\t * @param {string} htmlString\n\t * @return {string}\n\t * @protected\n\t */\n\tstatic collapseBreakingSpaces_(htmlString) {\n\t\treturn string.collapseBreakingSpaces(htmlString);\n\t}\n\n\t/**\n\t * Searches for first occurrence of the specified open tag string pattern\n\t * and from that point finds next \">\" position, identified as possible tag\n\t * end position.\n\t * @param {string} htmlString\n\t * @param {string} openTag Open tag string pattern without open tag ending\n\t *     character, e.g. \"<textarea\" or \"<code\".\n\t * @return {string}\n\t * @protected\n\t */\n\tstatic lookupPossibleTagBoundary_(htmlString, openTag) {\n\t\tvar tagPos = htmlString.indexOf(openTag);\n\t\tif (tagPos > -1) {\n\t\t\ttagPos += htmlString.substring(tagPos).indexOf('>') + 1;\n\t\t}\n\t\treturn tagPos;\n\t}\n\n\t/**\n\t * Preserves contents inside any <code>, <pre>, <script>, <style>,\n\t * <textarea> and conditional comment tags. When preserved, original content\n\t * are replaced with an unique generated block id and stored into\n\t * `preserved` map.\n\t * @param {string} htmlString\n\t * @param {Object} preserved Object to preserve the content indexed by an\n\t *     unique generated block id.\n\t * @return {html} The preserved HTML.\n\t * @protected\n\t */\n\tstatic preserveBlocks_(htmlString, preserved) {\n\t\thtmlString = html.preserveOuterHtml_(htmlString, '<!--[if', '<![endif]-->', preserved);\n\t\thtmlString = html.preserveInnerHtml_(htmlString, '<code', '</code', preserved);\n\t\thtmlString = html.preserveInnerHtml_(htmlString, '<pre', '</pre', preserved);\n\t\thtmlString = html.preserveInnerHtml_(htmlString, '<script', '</script', preserved);\n\t\thtmlString = html.preserveInnerHtml_(htmlString, '<style', '</style', preserved);\n\t\thtmlString = html.preserveInnerHtml_(htmlString, '<textarea', '</textarea', preserved);\n\t\treturn htmlString;\n\t}\n\n\t/**\n\t * Preserves inner contents inside the specified tag. When preserved,\n\t * original content are replaced with an unique generated block id and\n\t * stored into `preserved` map.\n\t * @param {string} htmlString\n\t * @param {string} openTag Open tag string pattern without open tag ending\n\t *     character, e.g. \"<textarea\" or \"<code\".\n\t * @param {string} closeTag Close tag string pattern without close tag\n\t *     ending character, e.g. \"</textarea\" or \"</code\".\n\t * @param {Object} preserved Object to preserve the content indexed by an\n\t *     unique generated block id.\n\t * @return {html} The preserved HTML.\n\t * @protected\n\t */\n\tstatic preserveInnerHtml_(htmlString, openTag, closeTag, preserved) {\n\t\tvar tagPosEnd = html.lookupPossibleTagBoundary_(htmlString, openTag);\n\t\twhile (tagPosEnd > -1) {\n\t\t\tvar tagEndPos = htmlString.indexOf(closeTag);\n\t\t\thtmlString = html.preserveInterval_(htmlString, tagPosEnd, tagEndPos, preserved);\n\t\t\thtmlString = htmlString.replace(openTag, '%%%~1~%%%');\n\t\t\thtmlString = htmlString.replace(closeTag, '%%%~2~%%%');\n\t\t\ttagPosEnd = html.lookupPossibleTagBoundary_(htmlString, openTag);\n\t\t}\n\t\thtmlString = htmlString.replace(/%%%~1~%%%/g, openTag);\n\t\thtmlString = htmlString.replace(/%%%~2~%%%/g, closeTag);\n\t\treturn htmlString;\n\t}\n\n\t/**\n\t * Preserves interval of the specified HTML into the preserved map replacing\n\t * original contents with an unique generated id.\n\t * @param {string} htmlString\n\t * @param {Number} start Start interval position to be replaced.\n\t * @param {Number} end End interval position to be replaced.\n\t * @param {Object} preserved Object to preserve the content indexed by an\n\t *     unique generated block id.\n\t * @return {string} The HTML with replaced interval.\n\t * @protected\n\t */\n\tstatic preserveInterval_(htmlString, start, end, preserved) {\n\t\tvar blockId = '%%%~BLOCK~' + core.getUid() + '~%%%';\n\t\tpreserved[blockId] = htmlString.substring(start, end);\n\t\treturn string.replaceInterval(htmlString, start, end, blockId);\n\t}\n\n\t/**\n\t * Preserves outer contents inside the specified tag. When preserved,\n\t * original content are replaced with an unique generated block id and\n\t * stored into `preserved` map.\n\t * @param {string} htmlString\n\t * @param {string} openTag Open tag string pattern without open tag ending\n\t *     character, e.g. \"<textarea\" or \"<code\".\n\t * @param {string} closeTag Close tag string pattern without close tag\n\t *     ending character, e.g. \"</textarea\" or \"</code\".\n\t * @param {Object} preserved Object to preserve the content indexed by an\n\t *     unique generated block id.\n\t * @return {html} The preserved HTML.\n\t * @protected\n\t */\n\tstatic preserveOuterHtml_(htmlString, openTag, closeTag, preserved) {\n\t\tvar tagPos = htmlString.indexOf(openTag);\n\t\twhile (tagPos > -1) {\n\t\t\tvar tagEndPos = htmlString.indexOf(closeTag) + closeTag.length;\n\t\t\thtmlString = html.preserveInterval_(htmlString, tagPos, tagEndPos, preserved);\n\t\t\ttagPos = htmlString.indexOf(openTag);\n\t\t}\n\t\treturn htmlString;\n\t}\n\n\t/**\n\t * Removes all comments of the HTML. Including conditional comments and\n\t * \"<![CDATA[\" blocks.\n\t * @param {string} htmlString\n\t * @return {string} The HTML without comments.\n\t * @protected\n\t */\n\tstatic removeComments_(htmlString) {\n\t\tvar preserved = {};\n\t\thtmlString = html.preserveOuterHtml_(htmlString, '<![CDATA[', ']]>', preserved);\n\t\thtmlString = html.preserveOuterHtml_(htmlString, '<!--', '-->', preserved);\n\t\thtmlString = html.replacePreservedBlocks_(htmlString, preserved, '');\n\t\treturn htmlString;\n\t}\n\n\t/**\n\t * Removes spaces between tags, even from inline-block elements.\n\t * @param {string} htmlString\n\t * @return {string} The HTML without spaces between tags.\n\t * @protected\n\t */\n\tstatic removeIntertagSpaces_(htmlString) {\n\t\thtmlString = htmlString.replace(html.Patterns.INTERTAG_CUSTOM_CUSTOM, '~%%%%%%~');\n\t\thtmlString = htmlString.replace(html.Patterns.INTERTAG_CUSTOM_TAG, '~%%%<');\n\t\thtmlString = htmlString.replace(html.Patterns.INTERTAG_TAG, '><');\n\t\thtmlString = htmlString.replace(html.Patterns.INTERTAG_TAG_CUSTOM, '>%%%~');\n\t\treturn htmlString;\n\t}\n\n\t/**\n\t * Removes spaces inside tags.\n\t * @param {string} htmlString\n\t * @return {string} The HTML without spaces inside tags.\n\t * @protected\n\t */\n\tstatic removeSpacesInsideTags_(htmlString) {\n\t\thtmlString = htmlString.replace(html.Patterns.TAG_END_SPACES, '$1$2');\n\t\thtmlString = htmlString.replace(html.Patterns.TAG_QUOTE_SPACES, '=$1$2$3');\n\t\treturn htmlString;\n\t}\n\n\t/**\n\t * Removes spaces surrounding tags.\n\t * @param {string} htmlString\n\t * @return {string} The HTML without spaces surrounding tags.\n\t * @protected\n\t */\n\tstatic removeSurroundingSpaces_(htmlString) {\n\t\treturn htmlString.replace(html.Patterns.SURROUNDING_SPACES, '$1');\n\t}\n\n\t/**\n\t * Restores preserved map keys inside the HTML. Note that the passed HTML\n\t * should contain the unique generated block ids to be replaced.\n\t * @param {string} htmlString\n\t * @param {Object} preserved Object to preserve the content indexed by an\n\t *     unique generated block id.\n\t * @param {string} replaceValue The value to replace any block id inside the\n\t * HTML.\n\t * @return {string}\n\t * @protected\n\t */\n\tstatic replacePreservedBlocks_(htmlString, preserved, replaceValue) {\n\t\tfor (var blockId in preserved) {\n\t\t\thtmlString = htmlString.replace(blockId, replaceValue);\n\t\t}\n\t\treturn htmlString;\n\t}\n\n\t/**\n\t * Simplifies DOCTYPE declaration to <!DOCTYPE html>.\n\t * @param {string} htmlString\n\t * @return {string}\n\t * @protected\n\t */\n\tstatic simplifyDoctype_(htmlString) {\n\t\tvar preserved = {};\n\t\thtmlString = html.preserveOuterHtml_(htmlString, '<!DOCTYPE', '>', preserved);\n\t\thtmlString = html.replacePreservedBlocks_(htmlString, preserved, '<!DOCTYPE html>');\n\t\treturn htmlString;\n\t}\n\n\t/**\n\t * Restores preserved map original contents inside the HTML. Note that the\n\t * passed HTML should contain the unique generated block ids to be restored.\n\t * @param {string} htmlString\n\t * @param {Object} preserved Object to preserve the content indexed by an\n\t *     unique generated block id.\n\t * @return {string}\n\t * @protected\n\t */\n\tstatic returnBlocks_(htmlString, preserved) {\n\t\tfor (var blockId in preserved) {\n\t\t\thtmlString = htmlString.replace(blockId, preserved[blockId]);\n\t\t}\n\t\treturn htmlString;\n\t}\n}\n\n/**\n * HTML regex patterns.\n * @enum {RegExp}\n * @protected\n */\nhtml.Patterns = {\n\t/**\n\t * @type {RegExp}\n\t */\n\tINTERTAG_CUSTOM_CUSTOM: /~%%%\\s+%%%~/g,\n\n\t/**\n\t * @type {RegExp}\n\t */\n\tINTERTAG_TAG_CUSTOM: />\\s+%%%~/g,\n\n\t/**\n\t * @type {RegExp}\n\t */\n\tINTERTAG_CUSTOM_TAG: /~%%%\\s+</g,\n\n\t/**\n\t * @type {RegExp}\n\t */\n\tINTERTAG_TAG: />\\s+</g,\n\n\t/**\n\t * @type {RegExp}\n\t */\n\tSURROUNDING_SPACES: /\\s*(<[^>]+>)\\s*/g,\n\n\t/**\n\t * @type {RegExp}\n\t */\n\tTAG_END_SPACES: /(<(?:[^>]+?))(?:\\s+?)(\\/?>)/g,\n\n\t/**\n\t * @type {RegExp}\n\t */\n\tTAG_QUOTE_SPACES: /\\s*=\\s*([\"']?)\\s*(.*?)\\s*(\\1)/g\n};\n\nexport default html;\n"],"sourceRoot":"/source/"}