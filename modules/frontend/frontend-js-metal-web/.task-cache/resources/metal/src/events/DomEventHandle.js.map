{"version":3,"sources":["D:/Projects/Liferay/portal/modules/frontend/frontend-js-metal-web/bower_components/metal/src/events/DomEventHandle.js"],"names":[],"mappings":";AAAA,aAAY,CAAC;;;;;;;;;;;;;;;;;;;;KASP,cAAc;YAAd,cAAc;;;;;;;;;;;;AAUR,WAVN,cAAc,CAUP,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE,WAAW,EAAE;yBAV9C,cAAc;;AAWlB,8BAXI,cAAc,6CAWZ,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE;AAChC,OAAI,CAAC,QAAQ,GAAG,WAAW,CAAC;GAC5B;;;;;;eAbI,cAAc;;UAkBL,0BAAG;AAChB,QAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC9E;;;SApBI,cAAc;;;kBAuBL,cAAc","file":"bower_components/metal/src/events/DomEventHandle.js","sourcesContent":["'use strict';\n\nimport EventHandle from '../events/EventHandle';\n\n/**\n * This is a special EventHandle, that is responsible for dom events, instead\n * of EventEmitter events.\n * @extends {EventHandle}\n */\nclass DomEventHandle extends EventHandle {\n\t/**\n\t * The constructor for `DomEventHandle`.\n\t * @param {!EventEmitter} emitter Emitter the event was subscribed to.\n\t * @param {string} event The name of the event that was subscribed to.\n\t * @param {!Function} listener The listener subscribed to the event.\n\t * @param {boolean} opt_capture Flag indicating if listener should be triggered\n\t *   during capture phase, instead of during the bubbling phase. Defaults to false.\n\t * @constructor\n\t */\n\tconstructor(emitter, event, listener, opt_capture) {\n\t\tsuper(emitter, event, listener);\n\t\tthis.capture_ = opt_capture;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tremoveListener() {\n\t\tthis.emitter_.removeEventListener(this.event_, this.listener_, this.capture_);\n\t}\n}\n\nexport default DomEventHandle;\n"],"sourceRoot":"/source/"}