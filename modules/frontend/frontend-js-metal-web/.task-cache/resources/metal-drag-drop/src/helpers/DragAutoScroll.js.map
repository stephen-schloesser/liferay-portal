{"version":3,"sources":["D:/Projects/Liferay/portal/modules/frontend/frontend-js-metal-web/bower_components/metal-drag-drop/src/helpers/DragAutoScroll.js"],"names":[],"mappings":"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","file":"bower_components/metal-drag-drop/src/helpers/DragAutoScroll.js","sourcesContent":["'use strict';\n\nimport core from 'bower:metal/src/core';\nimport Attribute from 'bower:metal/src/attribute/Attribute';\nimport Position from 'bower:metal-position/src/Position';\n\n/**\n * Helper called by the `Drag` instance that scrolls elements when the\n * mouse is near their boundaries.\n */\nclass DragAutoScroll extends Attribute {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor(opt_config) {\n\t\tsuper(opt_config);\n\n\t\t/**\n\t\t * The handler for the current call to `setTimeout`.\n\t\t * @type {?number}\n\t\t * @protected\n\t\t */\n\t\tthis.scrollTimeout_ = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdisposeInternal() {\n\t\tsuper.disposeInternal();\n\t\tthis.stop();\n\t}\n\n\t/**\n\t * Gets the region for the given scroll container, without including scroll.\n\t * @param {!Element} scrollContainer\n\t * @return {!Object}\n\t * @protected\n\t */\n\tgetRegionWithoutScroll_(scrollContainer) {\n\t\tif (core.isDocument(scrollContainer)) {\n\t\t\tvar height = window.innerHeight;\n\t\t\tvar width = window.innerWidth;\n\t\t\treturn Position.makeRegion(height, height, 0, width, 0, width);\n\t\t} else {\n\t\t\treturn Position.getRegion(scrollContainer);\n\t\t}\n\t}\n\n\t/**\n\t * Schedules a function to scroll the given containers.\n\t * @param {!Array<!Element>} scrollContainers\n\t * @param {number} mouseX\n\t * @param {number} mouseY\n\t */\n\tscroll(scrollContainers, mouseX, mouseY) {\n\t\tthis.stop();\n\t\tthis.scrollTimeout_ = setTimeout(\n\t\t\tthis.scrollInternal_.bind(this, scrollContainers, mouseX, mouseY),\n\t\t\tthis.delay\n\t\t);\n\t}\n\n\t/**\n\t * Adds the given deltas to the given element's scroll position.\n\t * @param {!Element} element\n\t * @param {number} deltaX\n\t * @param {number} deltaY\n\t * @protected\n\t */\n\tscrollElement_(element, deltaX, deltaY) {\n\t\tif (core.isDocument(element)) {\n\t\t\twindow.scrollBy(deltaX, deltaY);\n\t\t} else {\n\t\t\telement.scrollTop += deltaY;\n\t\t\telement.scrollLeft += deltaX;\n\t\t}\n\t}\n\n\t/**\n\t * Scrolls the given containers if the mouse is near their boundaries.\n\t * @param {!Array<!Element>} scrollContainers\n\t * @param {number} mouseX\n\t * @param {number} mouseY\n\t * @protected\n\t */\n\tscrollInternal_(scrollContainers, mouseX, mouseY) {\n\t\tfor (var i = 0; i < scrollContainers.length; i++) {\n\t\t\tvar scrollRegion = this.getRegionWithoutScroll_(scrollContainers[i]);\n\t\t\tif (!Position.pointInsideRegion(mouseX, mouseY, scrollRegion)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar deltaX = 0;\n\t\t\tvar deltaY = 0;\n\t\t\tvar scrollTop = Position.getScrollTop(scrollContainers[i]);\n\t\t\tvar scrollLeft = Position.getScrollLeft(scrollContainers[i]);\n\t\t\tif (scrollLeft > 0 && Math.abs(mouseX - scrollRegion.left) <= this.maxDistance) {\n\t\t\t\tdeltaX -= this.speed;\n\t\t\t} else if (Math.abs(mouseX - scrollRegion.right) <= this.maxDistance) {\n\t\t\t\tdeltaX += this.speed;\n\t\t\t}\n\t\t\tif (scrollTop > 0 && Math.abs(mouseY - scrollRegion.top) <= this.maxDistance) {\n\t\t\t\tdeltaY -= this.speed;\n\t\t\t} else if (Math.abs(mouseY - scrollRegion.bottom) <= this.maxDistance) {\n\t\t\t\tdeltaY += this.speed;\n\t\t\t}\n\n\t\t\tif (deltaX || deltaY) {\n\t\t\t\tthis.scrollElement_(scrollContainers[i], deltaX, deltaY);\n\t\t\t\tthis.scroll(scrollContainers, mouseX, mouseY);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Stops any auto scrolling that was scheduled to happen in the future.\n\t */\n\tstop() {\n\t\tclearTimeout(this.scrollTimeout_);\n\t}\n}\n\n/**\n * Attributes definition.\n * @type {!Object}\n * @static\n */\nDragAutoScroll.ATTRS = {\n\t/**\n\t * The delay in ms before an element is scrolled automatically.\n\t * @type {number}\n\t * @default 200\n\t */\n\tdelay: {\n\t\tvalidator: core.isNumber,\n\t\tvalue: 50\n\t},\n\n\t/**\n\t * The maximum distance the mouse needs to be from an element before\n\t * it will be scrolled automatically.\n\t * @type {number}\n\t * @default 10\n\t */\n\tmaxDistance: {\n\t\tvalidator: core.isNumber,\n\t\tvalue: 20\n\t},\n\n\t/**\n\t * The number of pixels that will be scrolled each time.\n\t * @type {number}\n\t * @default 10\n\t */\n\tspeed: {\n\t\tvalidator: core.isNumber,\n\t\tvalue: 20\n\t}\n};\n\nexport default DragAutoScroll;\n"],"sourceRoot":"/source/"}