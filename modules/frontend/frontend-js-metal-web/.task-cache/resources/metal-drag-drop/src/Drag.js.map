{"version":3,"sources":["D:/Projects/Liferay/portal/modules/frontend/frontend-js-metal-web/bower_components/metal-drag-drop/src/Drag.js"],"names":[],"mappings":"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","file":"bower_components/metal-drag-drop/src/Drag.js","sourcesContent":["'use strict';\n\nimport core from 'bower:metal/src/core';\nimport dom from 'bower:metal/src/dom/dom';\nimport object from 'bower:metal/src/object/object';\nimport Attribute from 'bower:metal/src/attribute/Attribute';\nimport DragAutoScroll from './helpers/DragAutoScroll';\nimport DragScrollDelta from './helpers/DragScrollDelta';\nimport DragShim from './helpers/DragShim';\nimport EventHandler from 'bower:metal/src/events/EventHandler';\nimport Position from 'bower:metal-position/src/Position';\n\n/**\n * Responsible for making elements draggable. Handles all the logic\n * for dragging elements. Dropping is handled by `DragDrop`.\n * @extends {Attribute}\n */\nclass Drag extends Attribute {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor(opt_config) {\n\t\tsuper(opt_config);\n\n\t\t/**\n\t\t * The drag placeholder that is active at the moment.\n\t\t * @type {Element}\n\t\t * @protected\n\t\t */\n\t\tthis.activeDragPlaceholder_ = null;\n\n\t\t/**\n\t\t * The drag source that is active at the moment.\n\t\t * @type {Element}\n\t\t * @protected\n\t\t */\n\t\tthis.activeDragSource_ = null;\n\n\t\t/**\n\t\t * The distance that has been dragged.\n\t\t * @type {number}\n\t\t * @protected\n\t\t */\n\t\tthis.distanceDragged_ = 0;\n\n\t\t/**\n\t\t * Flag indicating if one of the sources are being dragged.\n\t\t * @type {boolean}\n\t\t * @protected\n\t\t */\n\t\tthis.dragging_ = false;\n\n\t\t/**\n\t\t * The `EventHandler` instance that holds events that keep track of the drag action.\n\t\t * @type {!EventHandler}\n\t\t * @protected\n\t\t */\n\t\tthis.dragHandler_ = new EventHandler();\n\n\t\t/**\n\t\t * `DragScrollDelta` instance.\n\t\t * @type {!DragScrollDelta}\n\t\t * @protected\n\t\t */\n\t\tthis.dragScrollDelta_ = new DragScrollDelta();\n\n\t\t/**\n\t\t * The current x and y positions of the mouse (or null if not dragging).\n\t\t * @type {{x: number, y: number}}\n\t\t * @protected\n\t\t */\n\t\tthis.mousePos_ = null;\n\n\t\t/**\n\t\t * The distance between the mouse position and the dragged source position\n\t\t * (or null if not dragging).\n\t\t * @type {{x: number, y: number}}\n\t\t * @protected\n\t\t */\n\t\tthis.mouseSourceDelta_ = null;\n\n\t\t/**\n\t\t * The `EventHandler` instance that holds events for the source (or sources).\n\t\t * @type {!EventHandler}\n\t\t * @protected\n\t\t */\n\t\tthis.sourceHandler_ = new EventHandler();\n\n\t\t/**\n\t\t * The current region values of the element being dragged, relative to\n\t\t * the document (or null if not dragging).\n\t\t * @type {Object}\n\t\t * @protected\n\t\t */\n\t\tthis.sourceRegion_ = null;\n\n\t\t/**\n\t\t * The current x and y positions of the element being dragged relative to its\n\t\t * `offsetParent`, or to the viewport if there's no `offsetParent`\n\t\t * (or null if not dragging).\n\t\t * @type {{x: number, y: number}}\n\t\t * @protected\n\t\t */\n\t\tthis.sourceRelativePos_ = null;\n\n\t\tthis.attachSourceEvents_();\n\t\tthis.on(Drag.Events.DRAG, this.defaultDragFn_, true);\n\t\tthis.on(Drag.Events.END, this.defaultEndFn_, true);\n\t\tthis.on('sourcesChanged', this.handleSourcesChanged_.bind(this));\n\t\tthis.dragScrollDelta_.on('scrollDelta', this.handleScrollDelta_.bind(this));\n\t\tdom.on(document, 'keydown', this.handleKeyDown_.bind(this));\n\t}\n\n\t/**\n\t * Attaches the necessary events to the source (or sources).\n\t * @protected\n\t */\n\tattachSourceEvents_() {\n\t\tvar toAttach = {\n\t\t\tkeydown: this.handleSourceKeyDown_.bind(this),\n\t\t\tmousedown: this.handleDragStartEvent_.bind(this),\n\t\t\ttouchstart: this.handleDragStartEvent_.bind(this)\n\t\t};\n\t\tvar eventTypes = Object.keys(toAttach);\n\t\tfor (var i = 0; i < eventTypes.length; i++) {\n\t\t\tvar listenerFn = toAttach[eventTypes[i]];\n\t\t\tif (core.isString(this.sources)) {\n\t\t\t\tthis.sourceHandler_.add(dom.delegate(this.container, eventTypes[i], this.sources, listenerFn));\n\t\t\t} else {\n\t\t\t\tthis.sourceHandler_.add(dom.on(this.sources, eventTypes[i], listenerFn));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Builds the object with data to be passed to a drag event.\n\t * @return {!Object}\n\t * @protected\n\t */\n\tbuildEventObject_() {\n\t\treturn {\n\t\t\tplaceholder: this.activeDragPlaceholder_,\n\t\t\tsource: this.activeDragSource_,\n\t\t\trelativeX: this.sourceRelativePos_.x,\n\t\t\trelativeY: this.sourceRelativePos_.y,\n\t\t\tx: this.sourceRegion_.left,\n\t\t\ty: this.sourceRegion_.top\n\t\t};\n\t}\n\n\t/**\n\t * Calculates the initial positions for the drag action.\n\t * @param {!Event} event\n\t * @protected\n\t */\n\tcalculateInitialPosition_(event) {\n\t\tthis.sourceRegion_ = object.mixin({}, Position.getRegion(this.activeDragSource_, true));\n\t\tthis.sourceRelativePos_ = {\n\t\t\tx: this.activeDragSource_.offsetLeft,\n\t\t\ty: this.activeDragSource_.offsetTop\n\t\t};\n\t\tif (core.isDef(event.clientX)) {\n\t\t\tthis.mousePos_ = {\n\t\t\t\tx: event.clientX,\n\t\t\t\ty: event.clientY\n\t\t\t};\n\t\t\tthis.mouseSourceDelta_ = {\n\t\t\t\tx: this.sourceRegion_.left - this.mousePos_.x,\n\t\t\t\ty: this.sourceRegion_.top - this.mousePos_.y\n\t\t\t};\n\t\t}\n\t}\n\n\t/**\n\t * Checks if the given event can start a drag operation.\n\t * @param {!Event} event\n\t * @return {boolean}\n\t * @protected\n\t */\n\tcanStartDrag_(event) {\n\t\treturn !this.disabled &&\n\t\t\t(!core.isDef(event.button) || event.button === 0) &&\n\t\t\t!this.isDragging() &&\n\t\t\tthis.isWithinHandle_(event.target);\n\t}\n\n\t/**\n\t * Resets all variables to their initial values and detaches drag listeners.\n\t * @protected\n\t */\n\tcleanUpAfterDragging_() {\n\t\tif (this.activeDragPlaceholder_) {\n\t\t\tthis.activeDragPlaceholder_.setAttribute('aria-grabbed', 'false');\n\t\t\tdom.removeClasses(this.activeDragPlaceholder_, this.draggingClass);\n\t\t\tif (this.dragPlaceholder === Drag.Placeholder.CLONE) {\n\t\t\t\tdom.exitDocument(this.activeDragPlaceholder_);\n\t\t\t}\n\t\t}\n\t\tthis.activeDragPlaceholder_ = null;\n\t\tthis.activeDragSource_ = null;\n\t\tthis.sourceRegion_ = null;\n\t\tthis.sourceRelativePos_ = null;\n\t\tthis.mousePos_ = null;\n\t\tthis.mouseSourceDelta_ = null;\n\t\tthis.dragging_ = false;\n\t\tthis.dragHandler_.removeAllListeners();\n\t}\n\n\t/**\n\t * Clones the active drag source and adds the clone to the document.\n\t * @return {!Element}\n\t * @protected\n\t */\n\tcloneActiveDrag_() {\n\t\tvar placeholder = this.activeDragSource_.cloneNode(true);\n\t\tplaceholder.style.position = 'absolute';\n\t\tplaceholder.style.left = this.sourceRelativePos_.x + 'px';\n\t\tplaceholder.style.top = this.sourceRelativePos_.y + 'px';\n\t\tdom.append(this.activeDragSource_.parentNode, placeholder);\n\t\treturn placeholder;\n\t}\n\n\t/**\n\t * Constrains the given region according to the current attr configurations.\n\t * @param {!Object} region\n\t * @protected\n\t */\n\tconstrain_(region) {\n\t\tthis.constrainToAxis_(region);\n\t\tthis.constrainToSteps_(region);\n\t\tthis.constrainToRegion_(region);\n\t}\n\n\t/**\n\t * Constrains the given region according to the chosen drag axis, if any.\n\t * @param {!Object} region\n\t * @protected\n\t */\n\tconstrainToAxis_(region) {\n\t\tif (this.axis === 'x') {\n\t\t\tregion.top = this.sourceRegion_.top;\n\t\t\tregion.bottom = this.sourceRegion_.bottom;\n\t\t} else if (this.axis === 'y') {\n\t\t\tregion.left = this.sourceRegion_.left;\n\t\t\tregion.right = this.sourceRegion_.right;\n\t\t}\n\t}\n\n\t/**\n\t * Constrains the given region within the region defined by the `constrain` attr.\n\t * @param {!Object} region\n\t * @protected\n\t */\n\tconstrainToRegion_(region) {\n\t\tvar constrain = this.constrain;\n\t\tif (constrain) {\n\t\t\tif (core.isElement(constrain)) {\n\t\t\t\tconstrain = Position.getRegion(constrain, true);\n\t\t\t}\n\t\t\tif (region.left < constrain.left) {\n\t\t\t\tregion.left = constrain.left;\n\t\t\t} else if (region.right > constrain.right) {\n\t\t\t\tregion.left -= region.right - constrain.right;\n\t\t\t}\n\t\t\tif (region.top < constrain.top) {\n\t\t\t\tregion.top = constrain.top;\n\t\t\t} else if (region.bottom > constrain.bottom) {\n\t\t\t\tregion.top -= region.bottom - constrain.bottom;\n\t\t\t}\n\t\t\tregion.right = region.left + region.width;\n\t\t\tregion.bottom = region.top + region.height;\n\t\t}\n\t}\n\n\t/**\n\t * Constrains the given region to change according to the `steps` attr.\n\t * @param {!Object} region\n\t * @protected\n\t */\n\tconstrainToSteps_(region) {\n\t\tvar deltaX = region.left - this.sourceRegion_.left;\n\t\tvar deltaY = region.top - this.sourceRegion_.top;\n\t\tregion.left -= deltaX % this.steps.x;\n\t\tregion.right = region.left + region.width;\n\t\tregion.top -= deltaY % this.steps.y;\n\t\tregion.bottom = region.top + region.height;\n\t}\n\n\t/**\n\t * Creates the active drag placeholder, unless it already exists.\n\t * @protected\n\t */\n\tcreateActiveDragPlaceholder_() {\n\t\tvar dragPlaceholder = this.dragPlaceholder;\n\t\tif (dragPlaceholder === Drag.Placeholder.CLONE) {\n\t\t\tthis.activeDragPlaceholder_ = this.cloneActiveDrag_();\n\t\t} else if (core.isElement(dragPlaceholder)) {\n\t\t\tthis.activeDragPlaceholder_ = dragPlaceholder;\n\t\t} else {\n\t\t\tthis.activeDragPlaceholder_ = this.activeDragSource_;\n\t\t}\n\t}\n\n\t/**\n\t * The default behavior for the `Drag.Events.DRAG` event. Can be prevented\n\t * by calling the `preventDefault` function on the event's facade. Moves\n\t * the placeholder to the new calculated source position.\n\t * @protected\n\t */\n\tdefaultDragFn_() {\n\t\tthis.moveToPosition_(this.activeDragPlaceholder_);\n\t}\n\n\t/**\n\t * The default behavior for the `Drag.Events.END` event. Can be prevented\n\t * by calling the `preventDefault` function on the event's facade. Moves\n\t * the source element to the final calculated position.\n\t * @protected\n\t */\n\tdefaultEndFn_() {\n\t\tthis.moveToPosition_(this.activeDragSource_);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdisposeInternal() {\n\t\tthis.cleanUpAfterDragging_();\n\t\tthis.dragHandler_ = null;\n\t\tthis.dragScrollDelta_.dispose();\n\t\tthis.dragScrollDelta_ = null;\n\t\tthis.sourceHandler_.removeAllListeners();\n\t\tthis.sourceHandler_ = null;\n\t\tsuper.disposeInternal();\n\t}\n\n\t/**\n\t * Gets the active drag source.\n\t * @return {Element}\n\t */\n\tgetActiveDrag() {\n\t\treturn this.activeDragSource_;\n\t}\n\n\t/**\n\t * Handles events that can end a drag action, like \"mouseup\" and \"touchend\".\n\t * Triggered when the mouse drag action ends.\n\t * @protected\n\t */\n\thandleDragEndEvent_() {\n\t\tif (this.autoScroll) {\n\t\t\tthis.autoScroll.stop();\n\t\t}\n\t\tthis.dragScrollDelta_.stop();\n\t\tDragShim.hideDocShim();\n\t\tthis.emit(Drag.Events.END, this.buildEventObject_());\n\t\tthis.cleanUpAfterDragging_();\n\t}\n\n\t/**\n\t * Handles events that can move a draggable element, like \"mousemove\" and \"touchmove\".\n\t * Tracks the movement on the screen to update the drag action.\n\t * @param {!Event} event\n\t * @protected\n\t */\n\thandleDragMoveEvent_(event) {\n\t\tvar position = event.targetTouches ? event.targetTouches[0] : event;\n\t\tvar distanceX = position.clientX - this.mousePos_.x;\n\t\tvar distanceY = position.clientY - this.mousePos_.y;\n\t\tthis.mousePos_.x = position.clientX;\n\t\tthis.mousePos_.y = position.clientY;\n\t\tif (!this.isDragging() && !this.hasReachedMinimumDistance_(distanceX, distanceY)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.isDragging()) {\n\t\t\tthis.startDragging_();\n\t\t\tthis.dragScrollDelta_.start(this.activeDragPlaceholder_, this.scrollContainers);\n\t\t}\n\t\tif (this.autoScroll) {\n\t\t\tthis.autoScroll.scroll(this.scrollContainers, this.mousePos_.x, this.mousePos_.y);\n\t\t}\n\t\tthis.updatePositionFromMouse();\n\t}\n\n\t/**\n\t * Handles events that can start a drag action, like \"mousedown\" and \"touchstart\".\n\t * When this is triggered and the sources were not already being dragged, more\n\t * listeners will be attached to keep track of the drag action.\n\t * @param {!Event} event\n\t * @protected\n\t */\n\thandleDragStartEvent_(event) {\n\t\tthis.activeDragSource_ = event.delegateTarget || event.currentTarget;\n\n\t\tif (this.canStartDrag_(event)) {\n\t\t\tthis.calculateInitialPosition_(event.targetTouches ? event.targetTouches[0] : event);\n\t\t\tevent.preventDefault();\n\t\t\tif (event.type === 'keydown') {\n\t\t\t\tthis.startDragging_();\n\t\t\t} else {\n\t\t\t\tthis.dragHandler_.add.apply(\n\t\t\t\t\tthis.dragHandler_,\n\t\t\t\t\tDragShim.attachDocListeners(this.useShim, {\n\t\t\t\t\t\tmousemove: this.handleDragMoveEvent_.bind(this),\n\t\t\t\t\t\ttouchmove: this.handleDragMoveEvent_.bind(this),\n\t\t\t\t\t\tmouseup: this.handleDragEndEvent_.bind(this),\n\t\t\t\t\t\ttouchend: this.handleDragEndEvent_.bind(this)\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t\tthis.distanceDragged_ = 0;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Handles a `keydown` event on the document. Ends the drag if ESC was the pressed key.\n\t * @param {!Event} event\n\t * @protected\n\t */\n\thandleKeyDown_(event) {\n\t\tif (event.keyCode === 27 && this.isDragging()) {\n\t\t\tthis.handleDragEndEvent_();\n\t\t}\n\t}\n\n\t/**\n\t * Handles a \"scrollDelta\" event. Updates the position data for the source,\n\t * as well as the placeholder's position on the screen when \"move\" is set to true.\n\t * @param {!Object} event\n\t * @protected\n\t */\n\thandleScrollDelta_(event) {\n\t\tthis.mouseSourceDelta_.x += event.deltaX;\n\t\tthis.mouseSourceDelta_.y += event.deltaY;\n\t\tthis.updatePositionFromMouse();\n\t}\n\n\t/**\n\t * Handles a `keydown` event from `KeyboardDrag`. Does the appropriate drag action\n\t * for the pressed key.\n\t * @param {!Object} event\n\t * @protected\n\t */\n\thandleSourceKeyDown_(event) {\n\t\tif (this.isDragging()) {\n\t\t\tvar currentTarget = event.delegateTarget || event.currentTarget;\n\t\t\tif (currentTarget !== this.activeDragSource_) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (event.keyCode >= 37 && event.keyCode <= 40) {\n\t\t\t\t// Arrow keys during drag move the source.\n\t\t\t\tvar deltaX = 0;\n\t\t\t\tvar deltaY = 0;\n\t\t\t\tvar speedX = this.keyboardSpeed >= this.steps.x ? this.keyboardSpeed : this.steps.x;\n\t\t\t\tvar speedY = this.keyboardSpeed >= this.steps.y ? this.keyboardSpeed : this.steps.y;\n\t\t\t\tif (event.keyCode === 37) {\n\t\t\t\t\tdeltaX -= speedX;\n\t\t\t\t} else if (event.keyCode === 38) {\n\t\t\t\t\tdeltaY -= speedY;\n\t\t\t\t} else if (event.keyCode === 39) {\n\t\t\t\t\tdeltaX += speedX;\n\t\t\t\t} else {\n\t\t\t\t\tdeltaY += speedY;\n\t\t\t\t}\n\t\t\t\tthis.updatePositionFromDelta(deltaX, deltaY);\n\t\t\t\tevent.preventDefault();\n\t\t\t} else if (event.keyCode === 13 || event.keyCode === 32 || event.keyCode === 27) {\n\t\t\t\t// Enter, space or esc during drag will end it.\n\t\t\t\tthis.handleDragEndEvent_();\n\t\t\t}\n\t\t} else if (event.keyCode === 13 || event.keyCode === 32) {\n\t\t\t// Enter or space will start the drag action.\n\t\t\tthis.handleDragStartEvent_(event);\n\t\t}\n\t}\n\n\t/**\n\t * Triggers when the `sources` attribute changes. Detaches events attached to the\n\t * previous sources and attaches them to the new value instead.\n\t * @protected\n\t */\n\thandleSourcesChanged_() {\n\t\tthis.sourceHandler_.removeAllListeners();\n\t\tthis.attachSourceEvents_();\n\t}\n\n\t/**\n\t * Checks if the minimum distance for dragging has been reached after\n\t * adding the given values.\n\t * @param {number} distanceX\n\t * @param {number} distanceY\n\t * @return {boolean}\n\t * @protected\n\t */\n\thasReachedMinimumDistance_(distanceX, distanceY) {\n\t\tthis.distanceDragged_ += Math.abs(distanceX) + Math.abs(distanceY);\n\t\treturn this.distanceDragged_ >= this.minimumDragDistance;\n\t}\n\n\t/**\n\t * Checks if one of the sources are being dragged.\n\t * @return {boolean}\n\t */\n\tisDragging() {\n\t\treturn this.dragging_;\n\t}\n\n\t/**\n\t * Checks if the given element is within a valid handle.\n\t * @param {!Element} element\n\t * @protected\n\t */\n\tisWithinHandle_(element) {\n\t\tvar handles = this.handles;\n\t\tif (!handles) {\n\t\t\treturn true;\n\t\t} else if (core.isString(handles)) {\n\t\t\treturn dom.match(element, handles + ', ' + handles + ' *');\n\t\t} else {\n\t\t\treturn dom.contains(handles, element);\n\t\t}\n\t}\n\n\t/**\n\t * Moves the given element to the current source coordinates.\n\t * @param {!Element} element\n\t * @protected\n\t */\n\tmoveToPosition_(element) {\n\t\telement.style.left = this.sourceRelativePos_.x + 'px';\n\t\telement.style.top = this.sourceRelativePos_.y + 'px';\n\t}\n\n\t/**\n\t * Setter for the `autoScroll` attribute.\n\t * @param {*} val\n\t * @return {!DragAutoScroll}\n\t */\n\tsetterAutoScrollFn_(val) {\n\t\tif (val !== false) {\n\t\t\treturn new DragAutoScroll(val);\n\t\t}\n\t}\n\n\t/**\n\t * Setter for the `constrain` attribute.\n\t * @param {!Element|Object|string} val\n\t * @return {!Element|Object}\n\t * @protected\n\t */\n\tsetterConstrainFn(val) {\n\t\tif (core.isString(val)) {\n\t\t\tval = dom.toElement(val);\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t * Sets the `scrollContainers` attribute.\n\t * @param {Element|string} scrollContainers\n\t * @return {!Array<!Element>}\n\t * @protected\n\t */\n\tsetterScrollContainersFn_(scrollContainers) {\n\t\tvar elements = this.toElements_(scrollContainers);\n\t\telements.push(document);\n\t\treturn elements;\n\t}\n\n\t/**\n\t * Starts dragging the selected source.\n\t * @protected\n\t */\n\tstartDragging_() {\n\t\tthis.dragging_ = true;\n\t\tthis.createActiveDragPlaceholder_();\n\t\tdom.addClasses(this.activeDragPlaceholder_, this.draggingClass);\n\t\tthis.activeDragPlaceholder_.setAttribute('aria-grabbed', 'true');\n\t}\n\n\t/**\n\t * Converts the given element or selector into an array of elements.\n\t * @param {Element|string} elementOrSelector\n\t * @return {!Array<!Element>}\n\t * @protected\n\t */\n\ttoElements_(elementOrSelector) {\n\t\tif (core.isString(elementOrSelector)) {\n\t\t\tvar matched = this.container.querySelectorAll(elementOrSelector);\n\t\t\treturn Array.prototype.slice.call(matched, 0);\n\t\t} else if (elementOrSelector) {\n\t\t\treturn [elementOrSelector];\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\t/**\n\t * Updates the dragged element's position using the given calculated region.\n\t * @param {!Object} newRegion\n\t */\n\tupdatePosition(newRegion) {\n\t\tthis.constrain_(newRegion);\n\t\tvar deltaX = newRegion.left - this.sourceRegion_.left;\n\t\tvar deltaY = newRegion.top - this.sourceRegion_.top;\n\t\tif (deltaX !== 0 || deltaY !== 0) {\n\t\t\tthis.sourceRegion_ = newRegion;\n\t\t\tthis.sourceRelativePos_.x += deltaX;\n\t\t\tthis.sourceRelativePos_.y += deltaY;\n\t\t\tthis.emit(Drag.Events.DRAG, this.buildEventObject_());\n\t\t}\n\t}\n\n\t/**\n\t * Updates the dragged element's position, moving its placeholder if `move`\n\t * is set to true.\n\t * @param {number} deltaX\n\t * @param {number} deltaY\n\t */\n\tupdatePositionFromDelta(deltaX, deltaY) {\n\t\tvar newRegion = object.mixin({}, this.sourceRegion_);\n\t\tnewRegion.left += deltaX;\n\t\tnewRegion.right += deltaX;\n\t\tnewRegion.top += deltaY;\n\t\tnewRegion.bottom += deltaY;\n\t\tthis.updatePosition(newRegion);\n\t}\n\n\t/**\n\t * Updates the dragged element's position, according to the current mouse position.\n\t */\n\tupdatePositionFromMouse() {\n\t\tvar newRegion = {\n\t\t\theight: this.sourceRegion_.height,\n\t\t\tleft: this.mousePos_.x + this.mouseSourceDelta_.x,\n\t\t\ttop: this.mousePos_.y + this.mouseSourceDelta_.y,\n\t\t\twidth: this.sourceRegion_.width\n\t\t};\n\t\tnewRegion.right = newRegion.left + newRegion.width;\n\t\tnewRegion.bottom = newRegion.top + newRegion.height;\n\t\tthis.updatePosition(newRegion);\n\t}\n\n\t/**\n\t * Validates the given value, making sure that it's either an element or a string.\n\t * @param {*} val\n\t * @return {boolean}\n\t * @protected\n\t */\n\tvalidateElementOrString_(val) {\n\t\treturn core.isString(val) || core.isElement(val);\n\t}\n\n\t/**\n\t * Validates the value of the `constrain` attribute.\n\t * @param {*} val\n\t * @return {boolean}\n\t * @protected\n\t */\n\tvalidatorConstrainFn(val) {\n\t\treturn core.isString(val) || core.isObject(val);\n\t}\n}\n\n/**\n * Attributes definition.\n * @type {!Object}\n * @static\n */\nDrag.ATTRS = {\n\t/**\n\t * Configuration object for the `DragAutoScroll` instance that will be used for\n\t * automatically scrolling the elements in `scrollContainers` during drag when\n\t * the mouse is near their boundaries. If set to `false`, auto scrolling will be\n\t * disabled (default).\n\t * @type {!Object|boolean}\n\t * @default false\n\t */\n\tautoScroll: {\n\t\tsetter: 'setterAutoScrollFn_',\n\t\tvalue: false,\n\t\twriteOnce: true\n\t},\n\n\t/**\n\t * The axis that allows dragging. Can be set to just x, just y or both (default).\n\t * @type {string}\n\t */\n\taxis: {\n\t\tvalidator: core.isString\n\t},\n\n\t/**\n\t * Object with the boundaries, that the dragged element should not leave\n\t * while being dragged. If not set, the element is free to be dragged\n\t * to anywhere on the page. Can be either already an object with the\n\t * boundaries relative to the document, or an element to use the boundaries\n\t * from, or even a selector for finding that element.\n\t * @type {!Element|Object|string}\n\t */\n\tconstrain: {\n\t\tsetter: 'setterConstrainFn',\n\t\tvalidator: 'validatorConstrainFn'\n\t},\n\n\t/**\n\t * An element that contains all sources, targets and scroll containers. This\n\t * will be used when delegate events are attached or when looking for elements\n\t * by selector. Defaults to `document`.\n\t * @type {!Element|string}\n\t * @default document\n\t */\n\tcontainer: {\n\t\tsetter: dom.toElement,\n\t\tvalidator: 'validateElementOrString_',\n\t\tvalue: document\n\t},\n\n\t/**\n\t * Flag indicating if drag operations are disabled. When set to true, it\n\t * dragging won't work.\n\t * @type {boolean}\n\t * @default false\n\t */\n\tdisabled: {\n\t\tvalidator: core.isBoolean,\n\t\tvalue: false\n\t},\n\n\t/**\n\t * The CSS class that should be added to the node being dragged.\n\t * @type {string}\n\t * @default 'dragging'\n\t */\n\tdraggingClass: {\n\t\tvalidator: core.isString,\n\t\tvalue: 'dragging'\n\t},\n\n\t/**\n\t * The placeholder element that should be moved during drag. Can be either\n\t * an element or the \"clone\" string, indicating that a clone of the source\n\t * being dragged should be used. If nothing is set, the original source element\n\t * will be used.\n\t * @type {Element|?string}\n\t */\n\tdragPlaceholder: {\n\t\tvalidator: 'validateElementOrString_'\n\t},\n\n\t/**\n\t * Elements inside the source that should be the drag handles. Can be\n\t * either a single element or a selector for multiple elements.\n\t * @type {Element|?string}\n\t */\n\thandles: {\n\t\tvalidator: 'validateElementOrString_'\n\t},\n\n\t/**\n\t * The number of pixels that the source should move when dragged via\n\t * the keyboard controls.\n\t * @default 10\n\t */\n\tkeyboardSpeed: {\n\t\tvalidator: core.isNumber,\n\t\tvalue: 10\n\t},\n\n\t/**\n\t * The minimum distance, in pixels, that the mouse needs to move before\n\t * the action is considered a drag.\n\t * @type {number}\n\t * @default 5\n\t */\n\tminimumDragDistance: {\n\t\tvalidator: core.isNumber,\n\t\tvalue: 5,\n\t\twriteOnce: true\n\t},\n\n\t/**\n\t * Elements with scroll, besides the document, that contain any of the given\n\t * sources. Can be either a single element or a selector for multiple elements.\n\t * @type {Element|string}\n\t */\n\tscrollContainers: {\n\t\tsetter: 'setterScrollContainersFn_',\n\t\tvalidator: 'validateElementOrString_'\n\t},\n\n\t/**\n\t * Elements that should be draggable. Can be either a single element\n\t * or a selector for multiple elements.\n\t * @type {!Element|string}\n\t */\n\tsources: {\n\t\tvalidator: 'validateElementOrString_'\n\t},\n\n\t/**\n\t * The number of pixels that the source element should move at a time,\n\t * for each axis. When set to a value higher than 1, dragging won't be\n\t * a continuous movement, since the source element will move by multiple\n\t * pixels on each step.\n\t * @type {!{x: number, y: number}}\n\t */\n\tsteps: {\n\t\tvalidator: core.isObject,\n\t\tvalueFn: () => {\n\t\t\treturn {\n\t\t\t\tx: 1,\n\t\t\t\ty: 1\n\t\t\t};\n\t\t}\n\t},\n\n\t/**\n\t * Flag indicating if a shim should be used for capturing document events.\n\t * This is important for allowing dragging nodes over iframes. If false,\n\t * events will be listened in the document itself instead.\n\t * @type {boolean}\n\t * @default true\n\t */\n\tuseShim: {\n\t\tvalue: true\n\t}\n};\n\n/**\n * Holds the names of events that can be emitted by `Drag`.\n * @type {!Object}\n * @static\n */\nDrag.Events = {\n\tDRAG: 'drag',\n\tEND: 'end'\n};\n\n/**\n * Holds the values that can be passed to the `dragPlaceholder` attribute.\n * @type {!Object}\n * @static\n */\nDrag.Placeholder = {\n\tCLONE: 'clone'\n};\n\nexport default Drag;\n"],"sourceRoot":"/source/"}