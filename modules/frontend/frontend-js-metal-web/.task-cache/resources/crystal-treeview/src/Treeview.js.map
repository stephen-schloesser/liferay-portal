{"version":3,"sources":["D:/Projects/Liferay/portal/modules/frontend/frontend-js-metal-web/bower_components/crystal-treeview/src/Treeview.js"],"names":[],"mappings":"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","file":"bower_components/crystal-treeview/src/Treeview.js","sourcesContent":["'use strict';\n\nimport ComponentRegistry from 'bower:metal/src/component/ComponentRegistry';\nimport SoyComponent from 'bower:metal/src/soy/SoyComponent';\nimport dom from 'bower:metal/src/dom/dom';\nimport './Treeview.soy';\n\n/**\n * Treeview component.\n */\nclass Treeview extends SoyComponent {\n\t/**\n\t * Called after this component has been attached to the dom.\n\t */\n\tattached() {\n\t\tthis.on('nodesChanged', this.onNodesChanged_);\n\t\tthis.on('renderSurface', this.handleRenderSurface_);\n\t}\n\n\t/**\n\t * Gets the node object from the nodes attribute that is located at the given\n\t * index path.\n\t * @param {!Array<number>} path An array of indexes indicating where the searched\n\t *   node is located inside the nodes attribute.\n\t * @return {!Object}\n\t */\n\tgetNodeObj(path) {\n\t\tvar obj = this.nodes[path[0]];\n\t\tfor (var i = 1; i < path.length; i++) {\n\t\t\tobj = obj.children[path[i]];\n\t\t}\n\t\treturn obj;\n\t}\n\n\t/**\n\t * Gets the node object that the given element id represents from the nodes\n\t * attribute\n\t * @param {string} id\n\t * @return {!Object}\n\t */\n\tgetNodeObjFromId_(id) {\n\t\tvar path = id.substr(this.id.length + 1).split('-');\n\t\treturn this.getNodeObj(path);\n\t}\n\n\t/**\n\t * This is called when one of this tree view's nodes is clicked.\n\t * @param {!Event} event\n\t * @protected\n\t */\n\thandleNodeClicked_(event) {\n\t\tthis.toggleExpandedState_(event.delegateTarget);\n\t}\n\n\t/**\n\t * This is called when one of this tree view's nodes receives a keypress.\n\t * If the pressed key is ENTER or SPACE, the node's expanded state will be toggled.\n\t * @param {!Event} event\n\t * @protected\n\t */\n\thandleNodeKeyUp_(event) {\n\t\tif (event.keyCode === 13 || event.keyCode === 32) {\n\t\t\tthis.toggleExpandedState_(event.delegateTarget);\n\t\t}\n\t}\n\n\t/**\n\t * Handles a `renderSurface` event. Prevents rerendering surfaces when the changes\n\t * the surface was caused by a ui event that has already updated the screen.\n\t * @param {!Object} data\n\t * @param {!Object} event\n\t * @protected\n\t */\n\thandleRenderSurface_(data, event) {\n\t\tif (this.ignoreSurfaceUpdate_) {\n\t\t\tevent.preventDefault();\n\t\t\tthis.ignoreSurfaceUpdate_ = false;\n\t\t}\n\t}\n\n\t/**\n\t * Fired when the `nodes` attribute changes. Make sure that any other\n\t * updates to the `nodes` attribute made after ignoreSurfaceUpdate_ is\n\t * set to true, cause surfaces to update again.\n\t * @protected\n\t */\n\tonNodesChanged_() {\n\t\tthis.ignoreSurfaceUpdate_ = false;\n\t}\n\n\t/**\n\t * Toggles the expanded state for the given tree node.\n\t * @param {!Element} node\n\t * @protected\n\t */\n\ttoggleExpandedState_(node) {\n\t\tvar nodeObj = this.getNodeObjFromId_(node.parentNode.parentNode.id);\n\t\tnodeObj.expanded = !nodeObj.expanded;\n\t\tif (nodeObj.expanded) {\n\t\t\tdom.addClasses(node.parentNode, 'expanded');\n\t\t\tnode.setAttribute('aria-expanded', 'true');\n\t\t} else {\n\t\t\tdom.removeClasses(node.parentNode, 'expanded');\n\t\t\tnode.setAttribute('aria-expanded', 'false');\n\t\t}\n\n\t\tthis.nodes = this.nodes;\n\t\tthis.ignoreSurfaceUpdate_ = true;\n\t}\n}\n\n/**\n * Default tree view elementClasses.\n * @default treeView\n * @type {string}\n * @static\n */\nTreeview.ELEMENT_CLASSES = 'treeview';\n\n/**\n * Treeview attributes definition.\n * @type {!Object}\n * @static\n */\nTreeview.ATTRS = {\n\t/**\n\t * This tree view's nodes. Each node should have a name, and can optionally\n\t * have nested children nodes. It should also indicate if its children are\n\t * expanded or not.\n\t * @type {Array<!{children: Array, expanded: boolean?, name: string}>}\n\t * @default []\n\t */\n\tnodes: {\n\t\tvalidator: Array.isArray,\n\t\tvalueFn: function() {\n\t\t\treturn [];\n\t\t}\n\t}\n};\n\nComponentRegistry.register('Treeview', Treeview);\n\nexport default Treeview;\nimport JQueryAdapter from 'bower:metal-jquery-adapter/src/JQueryAdapter';JQueryAdapter.register('treeview', Treeview)"],"sourceRoot":"/source/"}